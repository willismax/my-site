"use strict";(self.webpackChunkmy_site=self.webpackChunkmy_site||[]).push([[9266],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>g});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),p=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=p(a),c=r,g=m["".concat(i,".").concat(c)]||m[c]||u[c]||o;return a?n.createElement(g,s(s({ref:t},d),{},{components:a})):n.createElement(g,s({ref:t},d))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,s=new Array(o);s[0]=c;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[m]="string"==typeof e?e:r,s[1]=l;for(var p=2;p<o;p++)s[p]=a[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},314:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const o={jupyter:{jupytext:{text_representation:{extension:".md",format_name:"markdown",format_version:"1.3",jupytext_version:"1.15.1"}},kernelspec:{display_name:"Python 3",name:"python3"}}},s=void 0,l={unversionedId:"2021ITHome\u9435\u4eba\u8cfd\u300c\u5f9eAI\u843d\u5730\u8ac7MLOps\u300d/\u5be6\u4f5cNotebooks/TensorFlow_Serving_REST_API_\u9435\u4eba\u8cfd\u793a\u7bc4",id:"2021ITHome\u9435\u4eba\u8cfd\u300c\u5f9eAI\u843d\u5730\u8ac7MLOps\u300d/\u5be6\u4f5cNotebooks/TensorFlow_Serving_REST_API_\u9435\u4eba\u8cfd\u793a\u7bc4",title:"TensorFlow_Serving_REST_API_\u9435\u4eba\u8cfd\u793a\u7bc4",description:"- \u672c\u7bc7\u70ba\u9435\u4eba\u8cfd\u793a\u7bc4\uff0c\u53c3\u8003\u5b98\u65b9\u7bc4\u4f8b\u4fee\u6539\u800c\u6210\u3002",source:"@site/docs/2021ITHome\u9435\u4eba\u8cfd\u300c\u5f9eAI\u843d\u5730\u8ac7MLOps\u300d/\u5be6\u4f5cNotebooks/27.TensorFlow_Serving_REST_API_\u9435\u4eba\u8cfd\u793a\u7bc4.md",sourceDirName:"2021ITHome\u9435\u4eba\u8cfd\u300c\u5f9eAI\u843d\u5730\u8ac7MLOps\u300d/\u5be6\u4f5cNotebooks",slug:"/2021ITHome\u9435\u4eba\u8cfd\u300c\u5f9eAI\u843d\u5730\u8ac7MLOps\u300d/\u5be6\u4f5cNotebooks/TensorFlow_Serving_REST_API_\u9435\u4eba\u8cfd\u793a\u7bc4",permalink:"/my-site/en/docs/2021ITHome\u9435\u4eba\u8cfd\u300c\u5f9eAI\u843d\u5730\u8ac7MLOps\u300d/\u5be6\u4f5cNotebooks/TensorFlow_Serving_REST_API_\u9435\u4eba\u8cfd\u793a\u7bc4",draft:!1,editUrl:"https://github.com/willismax/my-site/blob/main/docs/2021ITHome\u9435\u4eba\u8cfd\u300c\u5f9eAI\u843d\u5730\u8ac7MLOps\u300d/\u5be6\u4f5cNotebooks/27.TensorFlow_Serving_REST_API_\u9435\u4eba\u8cfd\u793a\u7bc4.md",tags:[],version:"current",sidebarPosition:27,frontMatter:{jupyter:{jupytext:{text_representation:{extension:".md",format_name:"markdown",format_version:"1.3",jupytext_version:"1.15.1"}},kernelspec:{display_name:"Python 3",name:"python3"}}},sidebar:"tutorialSidebar",previous:{title:"\u77e5\u8b58\u84b8\u993e_\u9435\u4eba\u8cfd\u793a\u7bc4",permalink:"/my-site/en/docs/2021ITHome\u9435\u4eba\u8cfd\u300c\u5f9eAI\u843d\u5730\u8ac7MLOps\u300d/\u5be6\u4f5cNotebooks/\u77e5\u8b58\u84b8\u993e_\u9435\u4eba\u8cfd\u793a\u7bc4"},next:{title:"TFX_\u7d44\u4ef6\u7b46\u8a18\u672c\u4e92\u52d5\u7bc4\u4f8b_\u9435\u4eba\u8cfd\u793a\u7bc4",permalink:"/my-site/en/docs/2021ITHome\u9435\u4eba\u8cfd\u300c\u5f9eAI\u843d\u5730\u8ac7MLOps\u300d/\u5be6\u4f5cNotebooks/TFX_\u7d44\u4ef6\u7b46\u8a18\u672c\u4e92\u52d5\u7bc4\u4f8b_\u9435\u4eba\u8cfd\u793a\u7bc4"}},i={},p=[{value:"\u4e0b\u8f09\u8cc7\u6599\u53ca\u8a13\u7df4\u6a21\u578b",id:"\u4e0b\u8f09\u8cc7\u6599\u53ca\u8a13\u7df4\u6a21\u578b",level:2},{value:"\u5132\u5b58\u6a21\u578b",id:"\u5132\u5b58\u6a21\u578b",level:3},{value:"\u6aa2\u67e5\u6211\u5011\u7684Saved model",id:"\u6aa2\u67e5\u6211\u5011\u7684saved-model",level:3},{value:"\u5efa\u7acb TensorFlow Serving \u670d\u52d9",id:"\u5efa\u7acb-tensorflow-serving-\u670d\u52d9",level:3},{value:"Add TensorFlow Serving distribution URI as a package source",id:"add-tensorflow-serving-distribution-uri-as-a-package-source",level:4},{value:"\u5b89\u88dd TensorFlow Serving",id:"\u5b89\u88dd-tensorflow-serving",level:3},{value:"\u555f\u52d5 TensorFlow Serving",id:"\u555f\u52d5-tensorflow-serving",level:3},{value:"\u4ee5 Request \u5411 TensorFlow Serving \u63d0\u51fa\u8acb\u6c42\u63d0\u51fa\u8acb\u6c42",id:"\u4ee5-request-\u5411-tensorflow-serving-\u63d0\u51fa\u8acb\u6c42\u63d0\u51fa\u8acb\u6c42",level:2},{value:"\u767c\u51fa REST \u8acb\u6c42",id:"\u767c\u51fa-rest-\u8acb\u6c42",level:3},{value:"\u6700\u65b0\u7248\u672c\u7684 servable",id:"\u6700\u65b0\u7248\u672c\u7684-servable",level:3},{value:"\u6307\u5b9a\u7279\u5b9a\u7248\u672c\u670d\u52d9",id:"\u6307\u5b9a\u7279\u5b9a\u7248\u672c\u670d\u52d9",level:3}],d={toc:p},m="wrapper";function u(e){let{components:t,...a}=e;return(0,r.kt)(m,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("a",{href:"https://colab.research.google.com/github/willismax/ML-in-Production-30-days-sharing/blob/main/notebook/27.TensorFlow_Serving_REST_API_%E9%90%B5%E4%BA%BA%E8%B3%BD%E7%A4%BA%E7%AF%84.ipynb",target:"_parent"},(0,r.kt)("img",{src:"https://colab.research.google.com/assets/colab-badge.svg",alt:"Open In Colab"})),(0,r.kt)("h1",{id:"27tensorflow-serving-rest-api---\u9435\u4eba\u8cfd\u793a\u7bc4"},"27.TensorFlow Serving REST API - \u9435\u4eba\u8cfd\u793a\u7bc4"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u672c\u7bc7\u70ba",(0,r.kt)("a",{parentName:"li",href:"https://ithelp.ithome.com.tw/articles/10272257"},"\u9435\u4eba\u8cfd"),"\u793a\u7bc4\uff0c\u53c3\u8003",(0,r.kt)("a",{parentName:"li",href:"https://www.tensorflow.org/tfx/tutorials/serving/rest_simple"},"\u5b98\u65b9\u7bc4\u4f8b"),"\u4fee\u6539\u800c\u6210\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u672c\u7bc7\u9069\u7528\u5728 Colab \u74b0\u5883\u3002")),(0,r.kt)("h2",{id:"\u4e0b\u8f09\u8cc7\u6599\u53ca\u8a13\u7df4\u6a21\u578b"},"\u4e0b\u8f09\u8cc7\u6599\u53ca\u8a13\u7df4\u6a21\u578b"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u7531\u65bc\u91cd\u9ede\u5728\u5982\u4f55\u8d77\u4e00\u500bTF Severing \u670d\u52d9\uff0c\u8cc7\u6599\u63a1\u7528",(0,r.kt)("inlineCode",{parentName:"li"},"keras.datasets.cifar10"),"\u9032\u884c\u793a\u7bc4\uff0c",(0,r.kt)("a",{parentName:"li",href:"https://keras.io/api/datasets/cifar10/"},"CIFAR10"),"\u70ba\u5c0f\u578b\u7684\u5f71\u50cf\u5206\u985e\u8cc7\u6599\u96c6\uff0c\u5177\u670950,000\u7b46\u8a13\u7df4\u8cc7\u6599\u96c6\u820710,000\u7b46\u6e2c\u8a66\u8cc7\u6599\u96c6\uff0c\u7686\u70ba32X32\u50cf\u7d20\u5716\u7247\u3002\u66f4\u591a\u8cc7\u8a0a\u53c3\u95b1",(0,r.kt)("a",{parentName:"li",href:"https://www.cs.toronto.edu/~kriz/cifar.html"},"\u5b98\u65b9\u4ecb\u7d39"),"\u3002")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Label"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"0"),(0,r.kt)("td",{parentName:"tr",align:null},"airplane")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"automobile")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"bird")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"3"),(0,r.kt)("td",{parentName:"tr",align:null},"cat")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"4"),(0,r.kt)("td",{parentName:"tr",align:null},"deer")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"5"),(0,r.kt)("td",{parentName:"tr",align:null},"dog")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"6"),(0,r.kt)("td",{parentName:"tr",align:null},"frog")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"7"),(0,r.kt)("td",{parentName:"tr",align:null},"horse")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"8"),(0,r.kt)("td",{parentName:"tr",align:null},"ship")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9"),(0,r.kt)("td",{parentName:"tr",align:null},"truck")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'id="dzLKpmZICaWN"',id:'"dzLKpmZICaWN"'},"# TensorFlow and tf.keras\n# !pip install -Uq grpcio==1.26.0\n\nimport tensorflow as tf\nfrom tensorflow import keras\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport os\nimport subprocess\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5efa\u7acb\u6a21\u578b")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'id="7MqDQO0KCaWS" colab={"base_uri": "https://localhost:8080/"} outputId="b88fbfeb-8815-4d3c-da2d-2fc9b0554649"',id:'"7MqDQO0KCaWS"',colab:'{"base_uri":','"https://localhost:8080/"}':!0,outputId:'"b88fbfeb-8815-4d3c-da2d-2fc9b0554649"'},"fashion_mnist = keras.datasets.cifar10\n(train_images, train_labels), (test_images, test_labels) = fashion_mnist.load_data()\n\n# scale the values to 0.0 to 1.0\ntrain_images = train_images / 255.0\ntest_images = test_images / 255.0\n\n# reshape for feeding into the model\ntrain_images = train_images.reshape(train_images.shape[0], 32, 32, 3)\ntest_images = test_images.reshape(test_images.shape[0], 32, 32, 3)\n\nclass_names = ['airplane','automobile','bird','cat','deer','dog','frog','horse','ship','truck']\n\n\nprint(f'train_images.shape: {train_images.shape}, of {train_images.dtype}')\nprint(f'test_images.shape: {test_images.shape}, of {test_images.dtype}')\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u8a13\u7df4\u8207\u8a55\u4f30\u6a21\u578b")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'id="LTNN0ANGgA36" colab={"base_uri": "https://localhost:8080/"} outputId="7e851cf5-c39a-45e5-b151-259172f9071e"',id:'"LTNN0ANGgA36"',colab:'{"base_uri":','"https://localhost:8080/"}':!0,outputId:'"7e851cf5-c39a-45e5-b151-259172f9071e"'},"model = keras.Sequential([\n  keras.layers.Conv2D(\n      input_shape=(32,32,3), \n      filters=8, \n      kernel_size=3, \n      strides=2, \n      activation='relu', \n      name='Conv1'),\n  keras.layers.Flatten(),\n  keras.layers.Dense(10, name='Dense')\n])\nmodel.summary()\n\ntesting = False\nepochs = 5\n\nmodel.compile(\n    optimizer='adam', \n    loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True),\n    metrics=[keras.metrics.SparseCategoricalAccuracy()]\n    )\nmodel.fit(train_images, train_labels, epochs=epochs)\n\ntest_loss, test_acc = model.evaluate(test_images, test_labels)\nprint(f'Test accuracy: {test_acc}')\n")),(0,r.kt)("h3",{id:"\u5132\u5b58\u6a21\u578b"},"\u5132\u5b58\u6a21\u578b"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5c07\u6a21\u578b\u4fdd\u5b58\u70ba",(0,r.kt)("a",{parentName:"li",href:"https://www.tensorflow.org/versions/r1.15/api_docs/python/tf/saved_model"},"SavedModel"),"\u683c\u5f0f\uff0c\u4ee5\u4fbf\u5c07\u6a21\u578b\u52a0\u8f09\u5230 TensorFlow Serving \u4e2d\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.tensorflow.org/tfx/guide/serving"},"TensorFlow Serving"),"\u5141\u8a31\u6211\u5011\u5728\u767c\u51fa\u63a8\u7406\u8acb\u6c42\u6642\u9078\u64c7\u8981\u4f7f\u7528\u7684\u6a21\u578b\u7248\u672c\u6216\u201c\u53ef\u670d\u52d9\u201d\u7248\u672c\u3002\u6bcf\u500b\u7248\u672c\u5c07\u5c0e\u51fa\u5230\u7d66\u5b9a\u8def\u5f91\u4e0b\u7684\u4e0d\u540c\u5b50\u76ee\u9304\u3002\u70ba\u6b64\uff0c\u9700\u5728\u76ee\u9304\u5275\u5efa protobuf \u6587\u4ef6\uff0c\u4e26\u5c07\u5305\u542b\u4e00\u500b\u7248\u672c\u865f\u3002 "),(0,r.kt)("li",{parentName:"ul"},"\u4ee5\u4e0b\u6703\u5728",(0,r.kt)("inlineCode",{parentName:"li"},"/tmp/"),"\u5efa\u7acb\u7248\u6b21\u7248\u6b21",(0,r.kt)("inlineCode",{parentName:"li"},"version = 1"),"\u4e4b\u76f8\u95dc\u6a94\u6848\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'id="0w5Rq8SsgWE6" colab={"base_uri": "https://localhost:8080/"} outputId="c3659b46-0cdb-4250-d84f-808b01f41e69"',id:'"0w5Rq8SsgWE6"',colab:'{"base_uri":','"https://localhost:8080/"}':!0,outputId:'"c3659b46-0cdb-4250-d84f-808b01f41e69"'},"import tempfile\n\nMODEL_DIR = tempfile.gettempdir()\nversion = 1\nexport_path = os.path.join(MODEL_DIR, str(version))\nprint(f'export_path = {export_path}')\n\ntf.keras.models.save_model(\n    model,\n    export_path,\n    overwrite=True,\n    include_optimizer=True,\n    save_format=None,\n    signatures=None,\n    options=None\n)\n\nprint('\\nSaved model:')\n!ls -l {export_path}\n")),(0,r.kt)("h3",{id:"\u6aa2\u67e5\u6211\u5011\u7684saved-model"},"\u6aa2\u67e5\u6211\u5011\u7684Saved model"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"saved_model_cli")," \u53ef\u4ee5\u6aa2\u67e5\u524d\u8ff0",(0,r.kt)("a",{parentName:"li",href:"https://www.tensorflow.org/versions/r1.15/api_docs/python/tf/MetaGraphDef"},"SavedModel"),"\u4e2d\u76f8\u95dc\u8cc7\u8a0a\uff0c\u9019\u5c0d\u7406\u89e3\u6a21\u578b\u76f8\u7576\u6709\u7528\uff0c\u5305\u542b:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.tensorflow.org/versions/r1.15/api_docs/python/tf/MetaGraphDef"},"MetaGraphDefs"),"\uff08\u6a21\u578b\uff09"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.tensorflow.org/tfx/tutorials/signature_defs"},"SignatureDefs"),"\uff08\u60a8\u53ef\u4ee5\u8abf\u7528\u7684\u65b9\u6cd5\uff09"))),(0,r.kt)("li",{parentName:"ul"},"SavedModel CLI\u7684\u8a73\u7d30\u8aaa\u660e\u53ef\u53c3\u95b1",(0,r.kt)("a",{parentName:"li",href:"https://github.com/tensorflow/docs/blob/master/site/en/r1/guide/saved_model.md#cli-to-inspect-and-execute-savedmodel"},"TensorFlow \u6307\u5357"),"\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'id="LU4GDF_aYtfQ" colab={"base_uri": "https://localhost:8080/"} outputId="1660f31e-964c-4c1f-accc-38bf33429400"',id:'"LU4GDF_aYtfQ"',colab:'{"base_uri":','"https://localhost:8080/"}':!0,outputId:'"1660f31e-964c-4c1f-accc-38bf33429400"'},"!saved_model_cli show --dir {export_path} --all\n")),(0,r.kt)("h3",{id:"\u5efa\u7acb-tensorflow-serving-\u670d\u52d9"},"\u5efa\u7acb TensorFlow Serving \u670d\u52d9"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u4f9d\u5b98\u65b9\u7bc4\u4f8b\u6b64\u70baColab\u74b0\u5883\u6240\u9700\u8a2d\u5b9a\u5167\u5bb9\uff0c\u5982\u4f7f\u7528\u672c\u6a5f\u7aef\u7684 Notebook \uff0c\u8acb\u6ce8\u610f\u76f8\u95dc\u63d0\u9192\u3002")),(0,r.kt)("h4",{id:"add-tensorflow-serving-distribution-uri-as-a-package-source"},"Add TensorFlow Serving distribution URI as a package source"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u6211\u5011\u6e96\u5099\u4f7f\u7528",(0,r.kt)("a",{parentName:"li",href:"https://wiki.debian.org/Aptitude"},"Aptitude"),"\u5b89\u88dd TensorFlow Serving\uff0c\u56e0\u70ba\u6b64 Colab \u5728 Debian \u74b0\u5883\u4e2d\u904b\u884c\u3002\u6211\u5011\u5c07\u628a\u9019\u500b",(0,r.kt)("inlineCode",{parentName:"li"},"tensorflow-model-server"),"\u5305\u6dfb\u52a0\u5230 Aptitude \u77e5\u9053\u7684\u5305\u5217\u8868\u4e2d\u3002\u8acb\u6ce8\u610f\uff0c\u6211\u5011\u4ee5 root \u8eab\u4efd\u904b\u884c\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u6700\u7c21\u55ae\u7684\u65b9\u5f0f\u662f\u4ee5 Docker \u4f48\u7f72\uff0c\u60a8\u53ef\u4ee5\u53c3\u8003\u6b64",(0,r.kt)("a",{parentName:"li",href:"https://www.tensorflow.org/tfx/serving/docker"},"\u7bc4\u4f8b"),"\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'id="v2hF_ChoOrEd"',id:'"v2hF_ChoOrEd"'},"import sys\n# We need sudo prefix if not on a Google Colab.\nif 'google.colab' not in sys.modules:\n  SUDO_IF_NEEDED = 'sudo'\nelse:\n  SUDO_IF_NEEDED = ''\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'id="EWg9X2QHlbGS" colab={"base_uri": "https://localhost:8080/"} outputId="20d665da-489f-49f1-8539-d1c2a78bcf53"',id:'"EWg9X2QHlbGS"',colab:'{"base_uri":','"https://localhost:8080/"}':!0,outputId:'"20d665da-489f-49f1-8539-d1c2a78bcf53"'},'# This is the same as you would do from your command line, but without the [arch=amd64], and no sudo\n# You would instead do:\n# echo "deb [arch=amd64] http://storage.googleapis.com/tensorflow-serving-apt stable tensorflow-model-server tensorflow-model-server-universal" | sudo tee /etc/apt/sources.list.d/tensorflow-serving.list && \\\n# curl https://storage.googleapis.com/tensorflow-serving-apt/tensorflow-serving.release.pub.gpg | sudo apt-key add -\n\n!echo "deb http://storage.googleapis.com/tensorflow-serving-apt stable tensorflow-model-server tensorflow-model-server-universal" | {SUDO_IF_NEEDED} tee /etc/apt/sources.list.d/tensorflow-serving.list && \\\ncurl https://storage.googleapis.com/tensorflow-serving-apt/tensorflow-serving.release.pub.gpg | {SUDO_IF_NEEDED} apt-key add -\n!{SUDO_IF_NEEDED} apt update\n')),(0,r.kt)("h3",{id:"\u5b89\u88dd-tensorflow-serving"},"\u5b89\u88dd TensorFlow Serving"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'id="ygwa9AgRloYy" colab={"base_uri": "https://localhost:8080/"} outputId="062772d0-9db4-4ee3-dc84-4d735e55f9b1"',id:'"ygwa9AgRloYy"',colab:'{"base_uri":','"https://localhost:8080/"}':!0,outputId:'"062772d0-9db4-4ee3-dc84-4d735e55f9b1"'},"!{SUDO_IF_NEEDED} apt-get install tensorflow-model-server\n")),(0,r.kt)("h3",{id:"\u555f\u52d5-tensorflow-serving"},"\u555f\u52d5 TensorFlow Serving"),(0,r.kt)("p",null,"\u52a0\u8f09\u5f8c\uff0c\u6211\u5011\u53ef\u4ee5\u958b\u59cb\u4f7f\u7528 REST \u767c\u51fa\u63a8\u7406\u8acb\u6c42\uff0c\u76f8\u95dc\u53c3\u6578:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rest_api_port"),"\uff1a REST \u8acb\u6c42\u7684 Port\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"model_name"),"\uff1a\u60a8\u5c07\u5728 REST \u8acb\u6c42\u7684 URL \u4e2d\u4f7f\u7528\u5b83\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"model_base_path"),"\uff1a\u4fdd\u5b58\u6a21\u578b\u7684\u76ee\u9304\u7684\u8def\u5f91\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'id="aUgp3vUdU5GS"',id:'"aUgp3vUdU5GS"'},'os.environ["MODEL_DIR"] = MODEL_DIR\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'id="kJDhHNJVnaLN" colab={"base_uri": "https://localhost:8080/"} outputId="53a28efa-c91e-41de-ba81-c7bab3124f6d" magic_args="--bg "',id:'"kJDhHNJVnaLN"',colab:'{"base_uri":','"https://localhost:8080/"}':!0,outputId:'"53a28efa-c91e-41de-ba81-c7bab3124f6d"',magic_args:'"--bg','"':!0},'nohup tensorflow_model_server \\\n  --rest_api_port=8501 \\\n  --model_name=fashion_model \\\n  --model_base_path="${MODEL_DIR}" >server.log 2>&1\n\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'id="IxbeiOCUUs2z"',id:'"IxbeiOCUUs2z"'},"!tail server.log\n")),(0,r.kt)("h2",{id:"\u4ee5-request-\u5411-tensorflow-serving-\u63d0\u51fa\u8acb\u6c42\u63d0\u51fa\u8acb\u6c42"},"\u4ee5 Request \u5411 TensorFlow Serving \u63d0\u51fa\u8acb\u6c42\u63d0\u51fa\u8acb\u6c42"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5148\u4ee5\u4e82\u6578\u67e5\u770b test data\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'id="Luqm_Jyff9iR" colab={"base_uri": "https://localhost:8080/", "height": 266} outputId="2fd413b4-684e-496f-dd0d-b3f3630f8a2c"',id:'"Luqm_Jyff9iR"',colab:'{"base_uri":','"https://localhost:8080/",':!0,'"height":':!0,"266}":!0,outputId:'"2fd413b4-684e-496f-dd0d-b3f3630f8a2c"'},"def show(idx, title):\n  plt.figure()\n  plt.imshow(test_images[idx].reshape(32,32,3))\n  plt.axis('off')\n  plt.title(f'{title}', fontdict={'size': 16})\n\nimport random\nrando = random.randint(0,len(test_images)-1)\ntest_label_name = class_names[int(test_labels[rando])]\nshow(rando, f'An Example Image: {test_label_name}')\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u6e2c\u8a66\u8acb\u6c42\u4e00\u6279JSON\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'id="2dsD7KQG1m-R" colab={"base_uri": "https://localhost:8080/"} outputId="e1d6102d-9acf-410b-8c3a-0ceb3c2d5878"',id:'"2dsD7KQG1m-R"',colab:'{"base_uri":','"https://localhost:8080/"}':!0,outputId:'"e1d6102d-9acf-410b-8c3a-0ceb3c2d5878"'},'import json\nfrom pprint import pprint\n\ndata = json.dumps(\n    {"signature_name": "serving_default", \n     "instances": test_images[0:3].tolist()}\n     )\npprint(f\'Data: {data[:50]} ... {data[len(data)-52:]}\')\n')),(0,r.kt)("h3",{id:"\u767c\u51fa-rest-\u8acb\u6c42"},"\u767c\u51fa REST \u8acb\u6c42"),(0,r.kt)("h3",{id:"\u6700\u65b0\u7248\u672c\u7684-servable"},"\u6700\u65b0\u7248\u672c\u7684 servable"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u4ee5 POST \u81f3 server\uff0c\u9810\u8a2d\u8acb\u6c42\u4f3a\u670d\u5668\u63d0\u4f9b\u6700\u65b0\u7248\u6b21\u7684\u5167\u5bb9\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'id="CgctjfjzQJl3"',id:'"CgctjfjzQJl3"'},"# docs_infra: no_execute\n!pip install -q requests\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'id="vGvFyuIzW6n6" colab={"base_uri": "https://localhost:8080/", "height": 266} outputId="422d820d-4fb4-474d-bb36-57fc24a5a089"',id:'"vGvFyuIzW6n6"',colab:'{"base_uri":','"https://localhost:8080/",':!0,'"height":':!0,"266}":!0,outputId:'"422d820d-4fb4-474d-bb36-57fc24a5a089"'},"import requests\nheaders = {\"content-type\": \"application/json\"}\njson_response = requests.post(\n    'http://localhost:8501/v1/models/fashion_model:predict', \n    data=data, \n    headers=headers\n    )\n\npredictions = json.loads(json_response.text)['predictions']\n\nshow(0, 'The model thought this was a {} (class {}), and it was actually a {} (class {})'.format(\n  class_names[np.argmax(predictions[0])], np.argmax(predictions[0]), class_names[int(test_labels[0])], test_labels[0]))\n")),(0,r.kt)("h3",{id:"\u6307\u5b9a\u7279\u5b9a\u7248\u672c\u670d\u52d9"},"\u6307\u5b9a\u7279\u5b9a\u7248\u672c\u670d\u52d9"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u4ee5REST API \u5411\u4f3a\u670d\u5668\u8acb\u6c42\u6307\u5b9a\u7248\u672c",(0,r.kt)("inlineCode",{parentName:"li"},"version = 1"),"\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'id="zRftRxeR1tZx" colab={"base_uri": "https://localhost:8080/", "height": 764} outputId="0925792a-7426-4aba-eb4e-78b0d403ec32"',id:'"zRftRxeR1tZx"',colab:'{"base_uri":','"https://localhost:8080/",':!0,'"height":':!0,"764}":!0,outputId:'"0925792a-7426-4aba-eb4e-78b0d403ec32"'},"# docs_infra: no_execute\nversion = 1\n\nheaders = {\"content-type\": \"application/json\"}\njson_response = requests.post(\n    f'http://localhost:8501/v1/models/fashion_model/versions/{version}:predict', \n    data=data, \n    headers=headers\n    )\n\npredictions = json.loads(json_response.text)['predictions']\n\nfor i in range(0,3):\n  show(i, 'The model thought this was a {} (class {}), and it was actually a {} (class {})'.format(\n    class_names[np.argmax(predictions[i])], np.argmax(predictions[i]), class_names[int(test_labels[i])], test_labels[i]))\n")))}u.isMDXComponent=!0}}]);