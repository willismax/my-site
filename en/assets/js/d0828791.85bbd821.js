"use strict";(self.webpackChunkmy_site=self.webpackChunkmy_site||[]).push([[4750],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>_});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(a),m=r,_=u["".concat(s,".").concat(m)]||u[m]||c[m]||o;return a?n.createElement(_,i(i({ref:t},d),{},{components:a})):n.createElement(_,i({ref:t},d))}));function _(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},2485:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const o={jupyter:{jupytext:{text_representation:{extension:".md",format_name:"markdown",format_version:"1.3",jupytext_version:"1.15.1"}},kernelspec:{display_name:"Python 3",name:"python3"}}},i=void 0,l={unversionedId:"2021ITHome\u9435\u4eba\u8cfd\u300c\u5f9eAI\u843d\u5730\u8ac7MLOps\u300d/\u5be6\u4f5cNotebooks/\u6a21\u578b\u512a\u5316_\u526a\u679d_Pruning_",id:"2021ITHome\u9435\u4eba\u8cfd\u300c\u5f9eAI\u843d\u5730\u8ac7MLOps\u300d/\u5be6\u4f5cNotebooks/\u6a21\u578b\u512a\u5316_\u526a\u679d_Pruning_",title:"\u6a21\u578b\u512a\u5316_\u526a\u679d_Pruning_",description:"- \u6b64\u70ba\u9435\u4eba\u8cfd\u7cfb\u5217\u6587\u793a\u7bc4\u6587\u4ef6\uff0c\u53c3\u8003TensorFlow Lite\u5b98\u65b9\u7bc4\u4f8b\u4fee\u6539\u800c\u6210\u3002",source:"@site/docs/2021ITHome\u9435\u4eba\u8cfd\u300c\u5f9eAI\u843d\u5730\u8ac7MLOps\u300d/\u5be6\u4f5cNotebooks/21.\u6a21\u578b\u512a\u5316_\u526a\u679d_Pruning_.md",sourceDirName:"2021ITHome\u9435\u4eba\u8cfd\u300c\u5f9eAI\u843d\u5730\u8ac7MLOps\u300d/\u5be6\u4f5cNotebooks",slug:"/2021ITHome\u9435\u4eba\u8cfd\u300c\u5f9eAI\u843d\u5730\u8ac7MLOps\u300d/\u5be6\u4f5cNotebooks/\u6a21\u578b\u512a\u5316_\u526a\u679d_Pruning_",permalink:"/my-site/en/docs/2021ITHome\u9435\u4eba\u8cfd\u300c\u5f9eAI\u843d\u5730\u8ac7MLOps\u300d/\u5be6\u4f5cNotebooks/\u6a21\u578b\u512a\u5316_\u526a\u679d_Pruning_",draft:!1,editUrl:"https://github.com/willismax/my-site/blob/main/docs/2021ITHome\u9435\u4eba\u8cfd\u300c\u5f9eAI\u843d\u5730\u8ac7MLOps\u300d/\u5be6\u4f5cNotebooks/21.\u6a21\u578b\u512a\u5316_\u526a\u679d_Pruning_.md",tags:[],version:"current",sidebarPosition:21,frontMatter:{jupyter:{jupytext:{text_representation:{extension:".md",format_name:"markdown",format_version:"1.3",jupytext_version:"1.15.1"}},kernelspec:{display_name:"Python 3",name:"python3"}}},sidebar:"tutorialSidebar",previous:{title:"\u8a13\u7df4\u5f8c\u91cf\u5316_TensorFolw_Lite_Quantization_\u9435\u4eba\u8cfd\u793a\u7bc4",permalink:"/my-site/en/docs/2021ITHome\u9435\u4eba\u8cfd\u300c\u5f9eAI\u843d\u5730\u8ac7MLOps\u300d/\u5be6\u4f5cNotebooks/\u8a13\u7df4\u5f8c\u91cf\u5316_TensorFolw_Lite_Quantization_\u9435\u4eba\u8cfd\u793a\u7bc4"},next:{title:"\u77e5\u8b58\u84b8\u993e_\u9435\u4eba\u8cfd\u793a\u7bc4",permalink:"/my-site/en/docs/2021ITHome\u9435\u4eba\u8cfd\u300c\u5f9eAI\u843d\u5730\u8ac7MLOps\u300d/\u5be6\u4f5cNotebooks/\u77e5\u8b58\u84b8\u993e_\u9435\u4eba\u8cfd\u793a\u7bc4"}},s={},p=[{value:"\u5efa\u7acb\u57fa\u672c\u6a21\u578b",id:"\u5efa\u7acb\u57fa\u672c\u6a21\u578b",level:2},{value:"\u4f7f\u7528\u526a\u679d\u8abf\u6574\u6a21\u578b",id:"\u4f7f\u7528\u526a\u679d\u8abf\u6574\u6a21\u578b",level:2},{value:"\u526a\u679d\u5f8c\u79fb\u9664\u5305\u88dd\u5c64",id:"\u526a\u679d\u5f8c\u79fb\u9664\u5305\u88dd\u5c64",level:3},{value:"\u6a21\u578b\u58d3\u7e2e3\u500d\u8853",id:"\u6a21\u578b\u58d3\u7e2e3\u500d\u8853",level:2},{value:"\u6a21\u578b\u58d3\u7e2e10\u500d\u8853",id:"\u6a21\u578b\u58d3\u7e2e10\u500d\u8853",level:2},{value:"\u6210\u679c",id:"\u6210\u679c",level:2},{value:"\u53c3\u8003",id:"\u53c3\u8003",level:2}],d={toc:p},u="wrapper";function c(e){let{components:t,...a}=e;return(0,r.kt)(u,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("a",{href:"https://colab.research.google.com/github/willismax/ML-in-Production-30-days-sharing/blob/main/notebook/21.%E6%A8%A1%E5%9E%8B%E5%84%AA%E5%8C%96_%E5%89%AA%E6%9E%9D_Pruning_.ipynb",target:"_parent"},(0,r.kt)("img",{src:"https://colab.research.google.com/assets/colab-badge.svg",alt:"Open In Colab"})),(0,r.kt)("h1",{id:"21\u526a\u679d-pruning"},"21.\u526a\u679d Pruning"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u6b64\u70ba\u9435\u4eba\u8cfd\u7cfb\u5217\u6587\u793a\u7bc4\u6587\u4ef6\uff0c\u53c3\u8003",(0,r.kt)("a",{parentName:"li",href:"https://www.tensorflow.org/lite/performance/post_training_quantization"},"TensorFlow Lite\u5b98\u65b9\u7bc4\u4f8b"),"\u4fee\u6539\u800c\u6210\u3002"),(0,r.kt)("li",{parentName:"ul"},"TF Lite \u8a55\u4f30\u51fd\u6578\u53c3\u8003",(0,r.kt)("a",{parentName:"li",href:"https://www.tensorflow.org/lite/performance/post_training_integer_quant_16x8"},"\u4f86\u6e90"),"\u3002")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u526a\u679d ",(0,r.kt)("a",{parentName:"li",href:"https://www.tensorflow.org/model_optimization/guide/pruning/pruning_with_keras"},"Pruning"),"\u5c07\u7121\u95dc\u7dca\u8981\u7684\u6b0a\u91cd\u6b78\u96f6\u522a\u9664\u6b78\u96f6\uff0c\u5728\u58d3\u7e2e\u6642\u80fd\u660e\u986f\u7e2e\u5c0f\u5c3a\u5bf8\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u7d93\u904e\u526a\u679d\u4e14\u91cf\u5316\u7684\u6a21\u578b\u53ef\u4ee5\u7e2e\u5c0f\u7684\u539f\u4f861/10\u5927\u5c0f\u3002"),(0,r.kt)("li",{parentName:"ul"},"Tensorflow \u6a21\u578b\u512a\u5316\u6a21\u7d44\u7684",(0,r.kt)("inlineCode",{parentName:"li"},"prune_low_magnitude()"),"\uff0c\u53ef\u4ee5\u5c07Keras\u6a21\u578b\u5728\u8a13\u7df4\u671f\u9593\u5c07\u5f71\u97ff\u8f03\u5c0f\u7684\u6b0a\u91cd\u4fee\u526a\u6b78\u96f6\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u5728\u672c\u7bc4\u4f8b\u4e2d\uff0c\u60a8\u5c07\u4f7f\u7528\u8207\u793a\u7bc4",(0,r.kt)("a",{parentName:"li",href:"https://colab.research.google.com/drive/1ukgVrMdtWjpReIygWHJ7-Lcw61Lv5kAO"},"\u8a13\u7df4\u5f8c\u91cf\u5316"),"\u76f8\u540c\u7684\u57fa\u6e96\u6a21\u578b\u9032\u884c\u512a\u5316\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'id="_eLMjw2wdKLg"',id:'"_eLMjw2wdKLg"'},"# \u5efa\u7acb\u8a55\u4f30\u6a21\u578b\u7684dict\nMODEL_SIZE = {}\nACCURACY = {}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'id="6hlLho0edo60" colab={"base_uri": "https://localhost:8080/"} outputId="ae4f479a-ba33-4874-84ca-316919ea21dc"',id:'"6hlLho0edo60"',colab:'{"base_uri":','"https://localhost:8080/"}':!0,outputId:'"ae4f479a-ba33-4874-84ca-316919ea21dc"'},"!pip install -q -U tensorflow_model_optimization\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'id="9FWoN81ud8Pl"',id:'"9FWoN81ud8Pl"'},"import tensorflow as tf\nimport tensorflow_model_optimization as tfmot\nimport numpy as np\nimport os\n")),(0,r.kt)("h2",{id:"\u5efa\u7acb\u57fa\u672c\u6a21\u578b"},"\u5efa\u7acb\u57fa\u672c\u6a21\u578b"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u6a21\u578b\u63a1\u7528",(0,r.kt)("inlineCode",{parentName:"li"},"tf.keras.datasets.mnist"),"\uff0c\u7528CNN\u9032\u884c\u5efa\u6a21\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'colab={"base_uri": "https://localhost:8080/"} id="u6rKXfkpd6lN" outputId="771894ab-4bdb-4bc9-ef39-9ea97ab51833"',colab:'{"base_uri":','"https://localhost:8080/"}':!0,id:'"u6rKXfkpd6lN"',outputId:'"771894ab-4bdb-4bc9-ef39-9ea97ab51833"'},"# Load MNIST dataset\nmnist = tf.keras.datasets.mnist\n(train_images, train_labels), (test_images, test_labels) = mnist.load_data()\n\n# Normalize the input image so that each pixel value is between 0 to 1.\ntrain_images = train_images / 255.0\ntest_images = test_images / 255.0\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'id="9YdaJpyKeYFG"',id:'"9YdaJpyKeYFG"'},"def model_builder():\n\n  keras = tf.keras\n\n  model = keras.Sequential([\n    keras.layers.InputLayer(input_shape=(28, 28)),\n    keras.layers.Reshape(target_shape=(28, 28, 1)),\n    keras.layers.Conv2D(filters=12, kernel_size=(3, 3), activation='relu'),\n    keras.layers.MaxPooling2D(pool_size=(2, 2)),\n    keras.layers.Flatten(),\n    keras.layers.Dense(10, activation='softmax')\n  ])\n\n  return model\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'colab={"base_uri": "https://localhost:8080/"} id="nnjoU2Kvd7Qd" outputId="40d0a807-7239-44f8-f937-32498009505e"',colab:'{"base_uri":','"https://localhost:8080/"}':!0,id:'"nnjoU2Kvd7Qd"',outputId:'"40d0a807-7239-44f8-f937-32498009505e"'},"baseline_model = model_builder()\nbaseline_model.compile(\n    optimizer='adam',\n    loss='sparse_categorical_crossentropy',\n    metrics=['accuracy']\n    )\n\nbaseline_model.summary()\nbaseline_model.save_weights('baseline_weights.h5')\n\nbaseline_model.fit(\n    train_images, \n    train_labels, \n    epochs=1, \n    shuffle=False\n    )\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'colab={"base_uri": "https://localhost:8080/"} id="acWJOg5vkeka" outputId="064f6562-7b21-4b7d-ef0f-cb905e161c64"',colab:'{"base_uri":','"https://localhost:8080/"}':!0,id:'"acWJOg5vkeka"',outputId:'"064f6562-7b21-4b7d-ef0f-cb905e161c64"'},"# \u5132\u5b58\u672a\u91cf\u5316\u6a21\u578b\nbaseline_model.save('non_pruned.h5', include_optimizer=False)\n\n# \u8a55\u4f30\u6a21\u578b\u4e26\u7d00\u9304\u6e96\u78ba\u7387\n_, ACCURACY['baseline Keras model'] = baseline_model.evaluate(test_images, test_labels)\n\n# \u7d00\u9304\u6a21\u578b\u5927\u5c0f\nMODEL_SIZE['baseline h5'] = os.path.getsize('non_pruned.h5')\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'colab={"base_uri": "https://localhost:8080/"} id="14zo30Eqke6R" outputId="53c83dad-99cf-42c1-ec4a-1fc83e52dadd"',colab:'{"base_uri":','"https://localhost:8080/"}':!0,id:'"14zo30Eqke6R"',outputId:'"53c83dad-99cf-42c1-ec4a-1fc83e52dadd"'},"ACCURACY\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'colab={"base_uri": "https://localhost:8080/"} id="nGT8PhHXtTiz" outputId="7499f416-7dcc-4fc1-be22-55d5f2df8f98"',colab:'{"base_uri":','"https://localhost:8080/"}':!0,id:'"nGT8PhHXtTiz"',outputId:'"7499f416-7dcc-4fc1-be22-55d5f2df8f98"'},"MODEL_SIZE\n")),(0,r.kt)("h2",{id:"\u4f7f\u7528\u526a\u679d\u8abf\u6574\u6a21\u578b"},"\u4f7f\u7528\u526a\u679d\u8abf\u6574\u6a21\u578b"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u9032\u884c\u526a\u679d\uff0c\u53e6\u5916\u56e0\u70ba\u526a\u679d\u6a21\u578b\u65b9\u6cd5\u6709\u589e\u52a0\u4e00\u5c64\u5305\u88dd\u5c64\uff0c\u6458\u8981\u986f\u793a\u7684\u53c3\u6578\u6703\u589e\u52a0\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'id="TpqizJsKYPBA" colab={"base_uri": "https://localhost:8080/"} outputId="312c7436-e40d-45cd-86bc-9d67023058d3"',id:'"TpqizJsKYPBA"',colab:'{"base_uri":','"https://localhost:8080/"}':!0,outputId:'"312c7436-e40d-45cd-86bc-9d67023058d3"'},"# Get the pruning method\nprune_low_magnitude = tfmot.sparsity.keras.prune_low_magnitude\n\n# Compute end step to finish pruning after 2 epochs.\nbatch_size = 128\nepochs = 2\nvalidation_split = 0.1 # 10% of training set will be used for validation set. \n\nnum_images = train_images.shape[0] * (1 - validation_split)\nend_step = np.ceil(num_images / batch_size).astype(np.int32) * epochs\n\n# Define pruning schedule.\npruning_params = {\n    'pruning_schedule': tfmot.sparsity.keras.PolynomialDecay(\n        initial_sparsity=0.50,\n        final_sparsity=0.80,\n        begin_step=0,\n        end_step=end_step)\n    }\n\n# Pass in the trained baseline model\nmodel_for_pruning = prune_low_magnitude(\n    baseline_model, \n    **pruning_params\n    )\n\n# `prune_low_magnitude` requires a recompile.\nmodel_for_pruning.compile(\n    optimizer='adam',\n    loss='sparse_categorical_crossentropy',\n    metrics=['accuracy']\n    )\n\nmodel_for_pruning.summary()\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u67e5\u770b\u6a21\u578b\u4e2d\u67d0\u4e00\u5c64\u7684\u6b0a\u91cd\u3002",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u526a\u679d\u524d\uff0c\u6709\u4e9b\u5fae\u5f31\u7684\u6b0a\u91cd\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u526a\u679d\u5f8c\uff0c\u5176\u4e2d\u8a31\u591a\u5c07\u88ab\u6e05\u96f6\u3002")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'id="y5ekdEBigB5l" colab={"base_uri": "https://localhost:8080/"} outputId="718edf8a-5213-4677-8ede-27ee6b3d6587"',id:'"y5ekdEBigB5l"',colab:'{"base_uri":','"https://localhost:8080/"}':!0,outputId:'"718edf8a-5213-4677-8ede-27ee6b3d6587"'},"# \u526a\u679d\u524d\u7684\u6a21\u578b\u6b0a\u91cd\nmodel_for_pruning.weights[1]\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u91cd\u65b0\u8a13\u7df4\u6a21\u578b\u3002\u4e26\u5728 Callback \u589e\u52a0",(0,r.kt)("inlineCode",{parentName:"li"},"tfmot.sparsity.keras.UpdatePruningStep()"),"\u53c3\u6578\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'id="DUCz6PL371Bx" colab={"base_uri": "https://localhost:8080/"} outputId="e648d669-67f8-408f-e5a4-2f6731dd47e0"',id:'"DUCz6PL371Bx"',colab:'{"base_uri":','"https://localhost:8080/"}':!0,outputId:'"e648d669-67f8-408f-e5a4-2f6731dd47e0"'},"# Callback to update pruning wrappers at each step\ncallbacks=[tfmot.sparsity.keras.UpdatePruningStep()]\n\n# Train and prune the model\nmodel_for_pruning.fit(\n    train_images, \n    train_labels,\n    epochs=epochs, \n    validation_split=validation_split,\n    callbacks=callbacks\n    )\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u91cd\u65b0\u8a13\u7df4\u5f8c\u5df2\u4fee\u526a\uff0c\u89c0\u5bdf\u540c\u4e00\u5c64\u7684\u6b0a\u91cd\u8b8a\u5316\uff0c\u8a31\u591a\u4e0d\u91cd\u8981\u7684\u6b0a\u91cd\u5df2\u6b78\u96f6\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'id="TOK4TidJhXpT" colab={"base_uri": "https://localhost:8080/"} outputId="c88aef84-2029-4b0f-b1f2-9b4dbd12595c"',id:'"TOK4TidJhXpT"',colab:'{"base_uri":','"https://localhost:8080/"}':!0,outputId:'"c88aef84-2029-4b0f-b1f2-9b4dbd12595c"'},"# \u526a\u679d\u5f8c\u7684\u6a21\u578b\u6b0a\u91cd\nmodel_for_pruning.weights[1]\n")),(0,r.kt)("h3",{id:"\u526a\u679d\u5f8c\u79fb\u9664\u5305\u88dd\u5c64"},"\u526a\u679d\u5f8c\u79fb\u9664\u5305\u88dd\u5c64"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u526a\u679d\u4e4b\u5f8c\uff0c\u60a8\u53ef\u4ee5\u7528",(0,r.kt)("a",{parentName:"li",href:"https://www.tensorflow.org/model_optimization/api_docs/python/tfmot/sparsity/keras/strip_pruning"},(0,r.kt)("inlineCode",{parentName:"a"},"tfmot.sparsity.keras.strip_pruning()")),"\u522a\u9664\u5305\u88dd\u5c64\u4ee5\u5177\u6709\u8207\u57fa\u7dda\u6a21\u578b\u76f8\u540c\u7684\u5c64\u548c\u53c3\u6578\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u6b64\u65b9\u6cd5\u4e5f\u6709\u52a9\u65bc\u4fdd\u5b58\u6a21\u578b\u4e26\u5c0e\u51fa\u70ba",(0,r.kt)("inlineCode",{parentName:"li"},"*.tflite"),"\u6a94\u6848\u683c\u5f0f\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'id="PbfLhZv68vwc" colab={"base_uri": "https://localhost:8080/"} outputId="63c53618-ec3e-403b-f1ff-a28003861df9"',id:'"PbfLhZv68vwc"',colab:'{"base_uri":','"https://localhost:8080/"}':!0,outputId:'"63c53618-ec3e-403b-f1ff-a28003861df9"'},"# Remove pruning wrappers\nmodel_for_export = tfmot.sparsity.keras.strip_pruning(model_for_pruning)\nmodel_for_export    .summary()\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u56e0\u70ba\u5305\u88dd\u5668\u5df2\u88ab\u79fb\u9664\uff0c\u76f8\u540c\u7684\u6a21\u578b\u6b0a\u91cd\uff0c\u5df2\u79fb\u7f6e\u7d22\u5f15","[0]","\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'id="SG6-aF9yiraG" colab={"base_uri": "https://localhost:8080/"} outputId="ef58054c-64aa-4593-f02e-790f087cb8a8"',id:'"SG6-aF9yiraG"',colab:'{"base_uri":','"https://localhost:8080/"}':!0,outputId:'"ef58054c-64aa-4593-f02e-790f087cb8a8"'},"model_for_export.weights[0]\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5c07\u526a\u679d\u5f8c\u7684\u6a94\u6848\u4fdd\u5b58\u70ba",(0,r.kt)("inlineCode",{parentName:"li"},"*.h5"),"\uff0c\u6b64\u6642\u6a21\u578b\u8207\u4fee\u526a\u524d\u5927\u5c0f\u76f8\u540c\u3002\u4f46\u4e00\u65e6\u58d3\u7e2e\u6a21\u578b\u5247\u6539\u5584\n\u76f8\u7576\u660e\u986f\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'id="CjjDMqJCTjqz" colab={"base_uri": "https://localhost:8080/"} outputId="c403601e-bb12-4d0d-9fb3-4f187a6ec4a4"',id:'"CjjDMqJCTjqz"',colab:'{"base_uri":','"https://localhost:8080/"}':!0,outputId:'"c403601e-bb12-4d0d-9fb3-4f187a6ec4a4"'},"# Save Keras model\nmodel_for_export.save('pruned_model.h5', include_optimizer=False)\n\n# Get uncompressed model size of baseline and pruned models\nMODEL_SIZE['pruned non quantized h5'] = os.path.getsize('pruned_model.h5')\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'colab={"base_uri": "https://localhost:8080/"} id="ywvDyXjfGW8s" outputId="df06ddbc-92c1-4b9c-89b5-116856d4078c"',colab:'{"base_uri":','"https://localhost:8080/"}':!0,id:'"ywvDyXjfGW8s"',outputId:'"df06ddbc-92c1-4b9c-89b5-116856d4078c"'},"MODEL_SIZE\n")),(0,r.kt)("h2",{id:"\u6a21\u578b\u58d3\u7e2e3\u500d\u8853"},"\u6a21\u578b\u58d3\u7e2e3\u500d\u8853"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u526a\u679d\u5f8c\u7684\u6a21\u578b\u518d\u58d3\u7e2e\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u58d3\u7e2e\u5f8c\u6a94\u6848\u5927\u5c0f\u7d04\u70ba\u539f\u672c1/3\uff0c\u9019\u662f\u56e0\u70ba\u526a\u679d\u5f8c\u6b78\u96f6\u7684\u6b0a\u91cd\u53ef\u4ee5\u66f4\u6709\u6548\u7684\u58d3\u7e2e\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'id="GlUv5yXHSEOr"',id:'"GlUv5yXHSEOr"'},"import tempfile\nimport zipfile\n\n_, zipped_file = tempfile.mkstemp('.zip')\nwith zipfile.ZipFile(zipped_file, 'w', compression=zipfile.ZIP_DEFLATED) as f:\n    f.write('pruned_model.h5')\n\n\nMODEL_SIZE['pruned non quantized h5'] = os.path.getsize('pruned_model.h5')\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'id="VWQ_AgiX_yiP" colab={"base_uri": "https://localhost:8080/"} outputId="fd42131a-6009-4c92-b4c7-8445ed12dbd6"',id:'"VWQ_AgiX_yiP"',colab:'{"base_uri":','"https://localhost:8080/"}':!0,outputId:'"fd42131a-6009-4c92-b4c7-8445ed12dbd6"'},"MODEL_SIZE\n")),(0,r.kt)("h2",{id:"\u6a21\u578b\u58d3\u7e2e10\u500d\u8853"},"\u6a21\u578b\u58d3\u7e2e10\u500d\u8853"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u73fe\u5728\u5617\u8a66\u5c07\u5df2\u7cbe\u526a\u679d\u5f8c\u7684\u6a21\u578b\u518d\u91cf\u5316\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u91cf\u5316\u539f\u672c\u5c31\u6703\u7e2e\u5c0f\u7d044\u500d\uff0c\u5c07\u526a\u679d\u6a21\u578b\u58d3\u7e2e\u5f8c\u518d\u91cf\u5316\uff0c\u8207\u57fa\u672c\u6a21\u578b\u76f8\u6bd4\uff0c\u9019\u4f7f\u6a21\u578b\u6e1b\u5c11\u4e86\u7d04 10 \u500d\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u5c0f10\u500d\u7cbe\u5ea6\u9084\u80fd\u7dad\u6301\u6c34\u6e96\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'colab={"base_uri": "https://localhost:8080/"} id="FTK3Ulja-dUy" outputId="2c80a8f1-cae7-45b8-f83d-168e1fb3a8eb"',colab:'{"base_uri":','"https://localhost:8080/"}':!0,id:'"FTK3Ulja-dUy"',outputId:'"2c80a8f1-cae7-45b8-f83d-168e1fb3a8eb"'},"# \u526a\u679d\u58d3\u7e2e\u5f8c\u518d\u91cf\u5316\u6a21\u578b\nconverter = tf.lite.TFLiteConverter.from_keras_model(baseline_model)\nconverter.optimizations = [tf.lite.Optimize.DEFAULT]\n\ntflite_model = converter.convert()\n\nwith open('pruned_quantized.tflite', 'wb') as f:\n    f.write(tflite_model)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'id="qIY6n9XWCvt5" colab={"base_uri": "https://localhost:8080/"} outputId="adb4e900-c8cb-4003-f86e-d643e63ad9cc"',id:'"qIY6n9XWCvt5"',colab:'{"base_uri":','"https://localhost:8080/"}':!0,outputId:'"adb4e900-c8cb-4003-f86e-d643e63ad9cc"'},"MODEL_SIZE['pruned quantized tflite'] = os.path.getsize('pruned_quantized.tflite')\nMODEL_SIZE\n\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5373\u4fbf\u5c0f\u5341\u500d\uff0c\u7cbe\u5ea6\u9084\u7dad\u6301\u539f\u672c\u6c34\u6e96\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'id="6d4MY-ozBRRd"',id:'"6d4MY-ozBRRd"'},'# A helper function to evaluate the TF Lite model using "test" dataset.\n# from: https://www.tensorflow.org/lite/performance/post_training_integer_quant_16x8#evaluate_the_models\ndef evaluate_model(filemane):\n  #Load the model into the interpreters\n  interpreter = tf.lite.Interpreter(model_path=str(filemane))\n  interpreter.allocate_tensors()\n\n  input_index = interpreter.get_input_details()[0]["index"]\n  output_index = interpreter.get_output_details()[0]["index"]\n\n  # Run predictions on every image in the "test" dataset.\n  prediction_digits = []\n  for test_image in test_images:\n    # Pre-processing: add batch dimension and convert to float32 to match with\n    # the model\'s input data format.\n    test_image = np.expand_dims(test_image, axis=0).astype(np.float32)\n    interpreter.set_tensor(input_index, test_image)\n\n    # Run inference.\n    interpreter.invoke()\n\n    # Post-processing: remove batch dimension and find the digit with highest\n    # probability.\n    output = interpreter.tensor(output_index)\n    digit = np.argmax(output()[0])\n    prediction_digits.append(digit)\n\n  # Compare prediction results with ground truth labels to calculate accuracy.\n  accurate_count = 0\n  for index in range(len(prediction_digits)):\n    if prediction_digits[index] == test_labels[index]:\n      accurate_count += 1\n  accuracy = accurate_count * 1.0 / len(prediction_digits)\n\n  return accuracy\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'id="PZBAdJmuWN0A" colab={"base_uri": "https://localhost:8080/"} outputId="b2324bef-79bc-45d0-ddf5-19a279bcc55a"',id:'"PZBAdJmuWN0A"',colab:'{"base_uri":','"https://localhost:8080/"}':!0,outputId:'"b2324bef-79bc-45d0-ddf5-19a279bcc55a"'},"# Get accuracy of pruned Keras and TF Lite models\n\n_, ACCURACY['pruned model h5'] = model_for_pruning.evaluate(test_images, test_labels)\nACCURACY['pruned and quantized tflite'] = evaluate_model('pruned_quantized.tflite')\n")),(0,r.kt)("h2",{id:"\u6210\u679c"},"\u6210\u679c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'colab={"base_uri": "https://localhost:8080/"} id="bamu10fzA0R_" outputId="0475f49c-b177-41a7-a76a-3578ea7e3bf2"',colab:'{"base_uri":','"https://localhost:8080/"}':!0,id:'"bamu10fzA0R_"',outputId:'"0475f49c-b177-41a7-a76a-3578ea7e3bf2"'},"ACCURACY\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:'colab={"base_uri": "https://localhost:8080/"} id="lPJh07O1fOwh" outputId="d7b22637-6b35-4e50-bec5-cc353d9de4ba"',colab:'{"base_uri":','"https://localhost:8080/"}':!0,id:'"lPJh07O1fOwh"',outputId:'"d7b22637-6b35-4e50-bec5-cc353d9de4ba"'},"MODEL_SIZE\n")),(0,r.kt)("h2",{id:"\u53c3\u8003"},"\u53c3\u8003"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.tensorflow.org/lite/performance/post_training_quantization"},"TensorFlow Lite\u5b98\u65b9\u7bc4\u4f8b"),"\u3002"),(0,r.kt)("li",{parentName:"ul"},"TF Lite \u8a55\u4f30\u51fd\u6578\u53c3\u8003",(0,r.kt)("a",{parentName:"li",href:"https://www.tensorflow.org/lite/performance/post_training_integer_quant_16x8"},"\u4f86\u6e90"),"\u3002")))}c.isMDXComponent=!0}}]);