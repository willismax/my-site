"use strict";(self.webpackChunkmy_site=self.webpackChunkmy_site||[]).push([[858],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>c});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",_={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,c=u["".concat(s,".").concat(d)]||u[d]||_[d]||i;return n?a.createElement(c,l(l({ref:t},m),{},{components:n})):a.createElement(c,l({ref:t},m))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1672:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>_,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={},l="Day 29 : \u7528\u65bc\u751f\u7522\u7684 TensorFlow Extended (TFX) \u5be6\u4f5c",o={unversionedId:"2021ITHome\u9435\u4eba\u8cfd\u300c\u5f9eAI\u843d\u5730\u8ac7MLOps\u300d/\u8ac7\u5be6\u8e10-\u90e8\u7f72 Deploying/Day 29",id:"2021ITHome\u9435\u4eba\u8cfd\u300c\u5f9eAI\u843d\u5730\u8ac7MLOps\u300d/\u8ac7\u5be6\u8e10-\u90e8\u7f72 Deploying/Day 29",title:"Day 29 : \u7528\u65bc\u751f\u7522\u7684 TensorFlow Extended (TFX) \u5be6\u4f5c",description:"tags: MLOps",source:"@site/docs/2021ITHome\u9435\u4eba\u8cfd\u300c\u5f9eAI\u843d\u5730\u8ac7MLOps\u300d/\u8ac7\u5be6\u8e10-\u90e8\u7f72 Deploying/Day 29.md",sourceDirName:"2021ITHome\u9435\u4eba\u8cfd\u300c\u5f9eAI\u843d\u5730\u8ac7MLOps\u300d/\u8ac7\u5be6\u8e10-\u90e8\u7f72 Deploying",slug:"/2021ITHome\u9435\u4eba\u8cfd\u300c\u5f9eAI\u843d\u5730\u8ac7MLOps\u300d/\u8ac7\u5be6\u8e10-\u90e8\u7f72 Deploying/Day 29",permalink:"/my-site/docs/2021ITHome\u9435\u4eba\u8cfd\u300c\u5f9eAI\u843d\u5730\u8ac7MLOps\u300d/\u8ac7\u5be6\u8e10-\u90e8\u7f72 Deploying/Day 29",draft:!1,editUrl:"https://github.com/willismax/my-site/blob/main/docs/2021ITHome\u9435\u4eba\u8cfd\u300c\u5f9eAI\u843d\u5730\u8ac7MLOps\u300d/\u8ac7\u5be6\u8e10-\u90e8\u7f72 Deploying/Day 29.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Day 28 : \u7528\u65bc\u751f\u7522\u7684\u6a5f\u68b0\u5b78\u7fd2 TensorFlow Extended (TFX) \u4ecb\u7d39",permalink:"/my-site/docs/2021ITHome\u9435\u4eba\u8cfd\u300c\u5f9eAI\u843d\u5730\u8ac7MLOps\u300d/\u8ac7\u5be6\u8e10-\u90e8\u7f72 Deploying/Day 28"},next:{title:"\u5be6\u4f5cNoteBooks",permalink:"/my-site/docs/category/\u5be6\u4f5cnotebooks"}},s={},p=[{value:"tags: <code>MLOps</code>",id:"tags-mlops",level:6},{value:"TFX \u7d44\u4ef6\u7b46\u8a18\u672c\u4e92\u52d5\u5be6\u4f5c",id:"tfx-\u7d44\u4ef6\u7b46\u8a18\u672c\u4e92\u52d5\u5be6\u4f5c",level:2},{value:"0. \u5b89\u88dd\u8207\u8a2d\u7f6e TFX \u74b0\u5883",id:"0-\u5b89\u88dd\u8207\u8a2d\u7f6e-tfx-\u74b0\u5883",level:3},{value:"0. \u5275\u5efa\u4e92\u52d5\u6587\u4ef6\u6aa2\u8996\u5668 InteractiveContext",id:"0-\u5275\u5efa\u4e92\u52d5\u6587\u4ef6\u6aa2\u8996\u5668-interactivecontext",level:3},{value:"1. ExampleGen",id:"1-examplegen",level:3},{value:"2. StatisticsGen",id:"2-statisticsgen",level:3},{value:"3. SchemaGen",id:"3-schemagen",level:3},{value:"4. ExampleValidator",id:"4-examplevalidator",level:3},{value:"5. Transform",id:"5-transform",level:3},{value:"6. Trainer",id:"6-trainer",level:3},{value:"(\u9078\u7528) \u4ee5 TensorBoard \u5206\u6790\u8a13\u7df4\u6a21\u578b",id:"\u9078\u7528-\u4ee5-tensorboard-\u5206\u6790\u8a13\u7df4\u6a21\u578b",level:3},{value:"7. Evaluator",id:"7-evaluator",level:3},{value:"8. Pusher",id:"8-pusher",level:3},{value:"\u5c0f\u7d50",id:"\u5c0f\u7d50",level:2},{value:"\u53c3\u8003",id:"\u53c3\u8003",level:2}],m={toc:p},u="wrapper";function _(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"day-29--\u7528\u65bc\u751f\u7522\u7684-tensorflow-extended-tfx-\u5be6\u4f5c"},"Day 29 : \u7528\u65bc\u751f\u7522\u7684 TensorFlow Extended (TFX) \u5be6\u4f5c"),(0,r.kt)("h6",{id:"tags-mlops"},"tags: ",(0,r.kt)("inlineCode",{parentName:"h6"},"MLOps")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://ithelp.ithome.com.tw/users/20121130/ironman/4015"},(0,r.kt)("img",{parentName:"a",src:"https://d1dwq032kyr03c.cloudfront.net/images/ironman_sticker/13/ai-and-data.png?sticker",alt:null,title:"\u7b2c 13 \u5c46\u9435\u4eba\u8cfd\u934a\u6210"}),"\u7b2c 13 \u5c46\u9435\u4eba\u8cfd\u934a\u6210"),"\n",(0,r.kt)("a",{parentName:"p",href:"https://ithelp.ithome.com.tw/articles/10273652"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/iThome%E9%90%B5%E4%BA%BA%E8%B3%BD2021-%E5%A8%81%E5%88%A9%E6%96%AF-blue",alt:null}))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u7528\u65bc\u751f\u7522\u7684\u6a5f\u68b0\u5b78\u7fd2\u7cfb\u7d71\uff0c\u5728 ",(0,r.kt)("a",{parentName:"li",href:"https://ithelp.ithome.com.tw/articles/10272958"},"Day 28")," \u4ecb\u7d39 TensorFlow Extended (TFX) \u89e3\u6c7a\u65b9\u6848\uff0c\u662f\u5c08\u9580\u7528\u65bc\u53ef\u64f4\u5145\u7684\u9ad8\u6548\u80fd\u6a5f\u5668\u5b78\u7fd2\u5de5\u4f5c\uff0c\u5305\u62ec\u5efa\u7acb\u6a21\u578b\u3001\u9032\u884c\u8a13\u7df4\u3001\u63d0\u4f9b\u63a8\u8ad6\uff0c\u4ee5\u53ca\u7ba1\u7406\u7dda\u4e0a\u3001\u884c\u52d5\u88dd\u7f6e (TensorFlow Lite)\u548c\u7db2\u9801\u61c9\u7528\u670d\u52d9 (TensorFlow JS) \u7684\u90e8\u7f72\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u672c\u65e5\u6211\u5011\u4fee\u6539 TFX \u5b98\u65b9\u5728\u7b46\u8a18\u672c\u53ef\u57f7\u884c\u7684\u4e92\u52d5\u5f0f\u7bc4\u4f8b\uff0c\u900f\u904e\u5be6\u4f5c\u7406\u89e3 TFX \u5982\u4f55\u5728\u5de5\u4f5c\u6d41\u7a0b\u4e2d\u900f\u904e\u7d44\u4ef6\u529f\u80fd\u9a57\u8b49\u8cc7\u6599\u3001\u7279\u5fb5\u5de5\u7a0b\u3001\u8a13\u7df4\u6a21\u578b\u3001\u6a21\u578b\u5206\u6790\u5230\u90e8\u7f72\u6a21\u578b\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://colab.research.google.com/drive/1o4lRoAdpPkfCL6WV3X6JwXK5C27itbI6?usp=drive_fs"},"Colab \u5be6\u4f5c\u7bc4\u4f8b ",(0,r.kt)("img",{parentName:"a",src:"https://i.imgur.com/pQnQ4tG.png",alt:null})),"\uff0c\u5167\u5bb9\u6e90\u81ea",(0,r.kt)("a",{parentName:"li",href:"https://www.tensorflow.org/tfx/tutorials/tfx/components_keras"},"TFX \u5b98\u65b9\u7bc4\u4f8b"),"\u3002")),(0,r.kt)("h2",{id:"tfx-\u7d44\u4ef6\u7b46\u8a18\u672c\u4e92\u52d5\u5be6\u4f5c"},"TFX \u7d44\u4ef6\u7b46\u8a18\u672c\u4e92\u52d5\u5be6\u4f5c"),(0,r.kt)("h3",{id:"0-\u5b89\u88dd\u8207\u8a2d\u7f6e-tfx-\u74b0\u5883"},"0","."," \u5b89\u88dd\u8207\u8a2d\u7f6e TFX \u74b0\u5883"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u66f4\u65b0 Colab \u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"pip"),"\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u5b89\u88dd TFX\uff0c",(0,r.kt)("strong",{parentName:"p"},"\u5b89\u88dd\u5b8c\u9700\u91cd\u65b0\u555f\u52d5\u57f7\u884c\u968e\u6bb5(Restart Runtime)")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"!pip install tfx\n\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u8a2d\u5b9a\u5de5\u4f5c\u8def\u5f91\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u4e0b\u8f09",(0,r.kt)("a",{parentName:"p",href:"https://data.cityofchicago.org/Transportation/Taxi-Trips/wrvz-psew"},"\u829d\u52a0\u54e5 Taxi Trips \u8cc7\u6599\u96c6")," \uff0c\u5c07\u96c6\u69cb\u5efa\u4e00\u500b\u9810\u6e2c\u5c0f\u8cbb",(0,r.kt)("inlineCode",{parentName:"p"},"tips"),"\u7684\u6a21\u578b\u3002"))),(0,r.kt)("h3",{id:"0-\u5275\u5efa\u4e92\u52d5\u6587\u4ef6\u6aa2\u8996\u5668-interactivecontext"},"0","."," \u5275\u5efa\u4e92\u52d5\u6587\u4ef6\u6aa2\u8996\u5668 InteractiveContext"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"tfx.orchestration.experimental.interactive.interactive_context.InteractiveContext")," \u5141\u8a31\u5728 notebook \u74b0\u5883\u4e2d\u4ee5\u4e92\u52d5\u65b9\u5f0f\u67e5\u770b TFX \u7d44\u4ef6\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"InteractiveContext")," \u9810\u8a2d\u4f7f\u7528\u81e8\u6642\u7684\u4e2d\u7e7c\u8cc7\u6599\u3002",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5df2\u6709\u81ea\u5df1\u7684 pipeline \u53ef\u8a2d\u5b9a ",(0,r.kt)("inlineCode",{parentName:"li"},"pipe_root")," \u53c3\u6578\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u5df2\u6709\u4e2d\u7e7c\u8cc7\u6599\u5eab\u53ef\u8a2d\u5b9a ",(0,r.kt)("inlineCode",{parentName:"li"},"metadata_connection_config")," \u53c3\u6578\u3002"))),(0,r.kt)("li",{parentName:"ul"},"\u900f\u904e ",(0,r.kt)("inlineCode",{parentName:"li"},"InteractiveContext()")," \u9010\u4e00\u6f14\u793a\u4e92\u52d5\u60c5\u5f62\uff0c\u8acb\u7559\u610f ",(0,r.kt)("inlineCode",{parentName:"li"},"InteractiveContext.run()")," \u662f\u5728\u7b46\u8a18\u672c\u4e92\u52d5\u986f\u793a\u65b9\u5f0f\uff0c\u5728\u751f\u7522\u74b0\u5883\u4e2d\u53ef\u5c08\u6ce8\u7d44\u4ef6\u6d41\u7a0b\uff08\u8acb\u53c3\u95b1",(0,r.kt)("a",{parentName:"li",href:"https://www.tensorflow.org/tfx/guide/build_tfx_pipeline"},"\u69cb\u5efa TFX \u7ba1\u9053\u6307\u5357"),"\uff09\u3002")),(0,r.kt)("h3",{id:"1-examplegen"},"1","."," ExampleGen"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"ExampleGen")," \u5c07\u6578\u64da\u62c6\u5206\u70ba\u8a13\u7df4\u96c6\u548c\u8a55\u4f30\u96c6\uff08\u9810\u8a2d\u70ba 2/3 \u8a13\u7df4 \u3001 1/3 \u8a55\u4f30\uff09")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"ExampleGen")," \u5c07\u6578\u64da\u8f49\u63db\u70ba ",(0,r.kt)("inlineCode",{parentName:"p"},"tf.Example")," \u683c\u5f0f\uff08\u53c3\u95b1",(0,r.kt)("a",{parentName:"p",href:"https://www.tensorflow.org/tutorials/load_data/tfrecord"},"\u8aaa\u660e"),"\uff09\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u672c\u7bc4\u4f8b\u5c07 ",(0,r.kt)("inlineCode",{parentName:"p"},"_data_root")," \u7684 CSV \u8cc7\u6599\u96c6\u8f38\u5165\u81f3 ",(0,r.kt)("inlineCode",{parentName:"p"},"ExampleGen"),"\u3002"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"example_gen = tfx.components.CsvExampleGen(input_base=_data_root)\ncontext.run(example_gen)\n\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u89c0\u5bdf\u4e92\u52d5\u4ecb\u9762\u5167\u5bb9\uff0c\u5efa\u8b70\u60a8\u4f7f\u7528 Colab \u6e2c\u8a66\uff0c\u5728\u6b64\u4ecb\u9762\u4e2d:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".execution_id")," \u662f\u6301\u7e8c\u7d2f\u52a0\u7684\u7248\u6b21\u7de8\u865f\uff0c\u5728\u5c0d\u61c9\u7684\u8cc7\u6599\u593e\u5c07\u5404\u7248\u6b21\u7684\u5167\u5bb9\u7559\u5b58\u7d00\u9304\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".component")," \u6307\u7684\u662f\u8a72 TFX \u7d44\u4ef6\uff0c\u8b6c\u5982\u4e0b\u5716\u986f\u793a\u70ba ",(0,r.kt)("inlineCode",{parentName:"li"},".component.CsvExampleGen"),"\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".component.inputs")," \u7d00\u9304\u8f38\u5165\u4f86\u6e90\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".component.outputs")," \u7d00\u9304\u8f38\u51fa\u7d50\u679c\u3002",(0,r.kt)("br",{parentName:"li"}),(0,r.kt)("img",{parentName:"li",src:"https://i.imgur.com/KDJmdzf.png",alt:null}))))),(0,r.kt)("h3",{id:"2-statisticsgen"},"2","."," StatisticsGen"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"StatisticsGen")," \u7d44\u4ef6\u8f38\u5165 ",(0,r.kt)("inlineCode",{parentName:"p"},"ExampleGen")," \u6578\u64da\u5f8c\uff0c\u5c07\u64da\u4ee5\u8a08\u7b97\u51fa\u8cc7\u6599\u96c6\u7684\u7d71\u8a08\u6578\u64da\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"StatisticsGen")," \u662f ",(0,r.kt)("a",{parentName:"p",href:"https://www.tensorflow.org/tfx/data_validation/get_started"},"TFDV")," \u6a21\u7d44\u529f\u80fd\u4e4b\u4e00\u3002"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"statistics_gen = tfx.components.StatisticsGen(\n    examples = example_gen.outputs['examples']\n    )\ncontext.run(statistics_gen)\n\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"context.run(statistics_gen)")," \u89c0\u5bdf\u4e92\u52d5\u4ecb\u9762:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".execution_id")," \u7248\u6b21\u7d2f\u52a0\u81f32\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".component.inputs")," \u7d44\u4ef6\u8f38\u5165\u70ba ",(0,r.kt)("inlineCode",{parentName:"li"},"Examples")," \u3002"),(0,r.kt)("li",{parentName:"ul"},"\u8f38\u51fa\u70ba ",(0,r.kt)("inlineCode",{parentName:"li"},"ExampleStatistics")," \u3002",(0,r.kt)("br",{parentName:"li"}),(0,r.kt)("img",{parentName:"li",src:"https://i.imgur.com/ylMd6h0.png",alt:null})))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"context.show(statistics_gen.outputs['statistics'])")," \u5982\u540c TFDV \u5de5\u5177\u4ee5 ",(0,r.kt)("a",{parentName:"p",href:"https://pair-code.github.io/facets/"},"Facets")," \u8996\u89ba\u5316\u7d71\u8a08\u8cc7\u8a0a\u3002"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"context.show(statistics_gen.outputs['statistics'])\n\n")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u89c0\u5bdf\u5224\u8b80\u53ef\u80fd\u7570\u5e38\u7684\u7d05\u8272\u503c\u3001\u8cc7\u6599\u5206\u4f48\u60c5\u5f62\u7b49\u3002",(0,r.kt)("br",{parentName:"li"}),(0,r.kt)("img",{parentName:"li",src:"https://i.imgur.com/YlUKeuk.png",alt:null}))))),(0,r.kt)("h3",{id:"3-schemagen"},"3","."," SchemaGen"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"SchemaGen"),"\u7d44\u4ef6\u6703\u4f9d\u64da\u60a8\u7684\u8cc7\u6599\u7d71\u8a08\u81ea\u52d5\u7522\u751f Schema \uff0c\u5305\u542b\u6578\u64da\u9810\u671f\u908a\u754c\u3001\u8cc7\u6599\u985e\u578b\u8207\u5c6c\u6027\u5b83\u9084\u4f7f\u7528",(0,r.kt)("a",{parentName:"p",href:"https://www.tensorflow.org/tfx/data_validation/get_started"},"TensorFlow \u6578\u64da\u9a57\u8b49"),"\u5eab\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"SchemaGen")," \u540c\u6a23\u662f ",(0,r.kt)("a",{parentName:"p",href:"https://www.tensorflow.org/tfx/data_validation/get_started"},"TFDV")," \u6a21\u7d44\u529f\u80fd\u4e4b\u4e00\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u5373\u4fbf Schema \u81ea\u52d5\u751f\u6210\u5df2\u7d93\u5f88\u5be6\u7528\uff0c\u4f46\u60a8\u4ecd\u61c9\u8a72\u6703\u4f9d\u64da\u9700\u6c42\u9032\u884c\u5be9\u67e5\u548c\u4fee\u6539\u3002"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"schema_gen = tfx.components.SchemaGen(\n    statistics=statistics_gen.outputs['statistics'],\n    infer_feature_shape=False)\ncontext.run(schema_gen)\n\n")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SchemaGen")," \u8f38\u5165\u70ba ",(0,r.kt)("inlineCode",{parentName:"li"},"StatisticsGen"),"\uff0c\u9ed8\u8a8d\u60c5\u6cc1\u4e0b\u67e5\u770b\u5df2\u62c6\u5206\u7684\u8a13\u7df4\u8cc7\u6599\u96c6\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SchemaGen")," \u8f38\u51fa\u70ba ",(0,r.kt)("inlineCode",{parentName:"li"},"Schema")," \u3002",(0,r.kt)("br",{parentName:"li"}),(0,r.kt)("img",{parentName:"li",src:"https://i.imgur.com/n8bCnxI.png",alt:null})),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SchemaGen")," \u57f7\u884c\u5f8c\u53ef\u900f\u904e ",(0,r.kt)("inlineCode",{parentName:"li"},"context.show(schema_gen.outputs['schema'])")," \u67e5\u770b Schema \u8868\u683c\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u8868\u683c\u5448\u73fe\u5404\u7279\u5fb5\u540d\u7a31\u3001\u5c6c\u6027\u3001\u662f\u5426\u5fc5\u9808\u3001\u6240\u6709\u503c\u3001Domain \u53ca \u908a\u754c\u7bc4\u570d\u7b49\uff0c \u53c3\u898b ",(0,r.kt)("a",{parentName:"li",href:"https://www.tensorflow.org/tfx/guide/schemagen"},"SchemaGen \u6587\u4ef6"),"\u3002",(0,r.kt)("br",{parentName:"li"}),(0,r.kt)("img",{parentName:"li",src:"https://i.imgur.com/8CkuVUg.png",alt:null}),(0,r.kt)("br",{parentName:"li"}),(0,r.kt)("img",{parentName:"li",src:"https://i.imgur.com/9CF3JOx.png",alt:null}))))),(0,r.kt)("h3",{id:"4-examplevalidator"},"4","."," ExampleValidator"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"ExampleValidator")," \u7d44\u4ef6\u6839\u64da Schema \u7684\u9810\u671f\u6aa2\u6e2c\u6578\u64da\u4e2d\u7684\u7570\u5e38\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"ExampleValidator")," \u540c\u6a23\u662f ",(0,r.kt)("a",{parentName:"p",href:"https://www.tensorflow.org/tfx/data_validation/get_started"},"TFDV")," \u6a21\u7d44\u529f\u80fd\u4e4b\u4e00\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"ExampleValidator")," \u7684\u8f38\u5165\u662f\u4f86\u81ea\u5177\u6709\u6578\u64da\u7d71\u8a08\u8cc7\u8a0a\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"StatisticsGen")," \u4ee5\u53ca\u5177\u6709\u6578\u64da\u5b9a\u7fa9 Schema \u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"SchemaGen"),"\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"ExampleValidator")," \u7684\u8f38\u51fa ",(0,r.kt)("inlineCode",{parentName:"p"},"anomalies")," \u662f\u6709\u7121\u7570\u5e38\u7684\u5224\u8b80\u7d50\u679c\u3002"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"example_validator = tfx.components.ExampleValidator(\n    statistics = statistics_gen.outputs['statistics'],\n    schema = schema_gen.outputs['schema'])\ncontext.run(example_validator)\n\n")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u57f7\u884c ",(0,r.kt)("inlineCode",{parentName:"p"},"ExampleValidator")," \u5f8c\u53ef\u4ee5\u7522\u751f\u7570\u5e38\u60c5\u5f62\u7684\u5716\u8868\uff0c\u7da0\u5b57 No anomalies found. \u8868\u793a\u7121\u7570\u5e38\u3002",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://i.imgur.com/1q8JWQR.png",alt:null})),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"context.show(example_validator.outputs['anomalies'])\n\n")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{parentName:"p",src:"https://i.imgur.com/yiwJs29.png",alt:null})))))),(0,r.kt)("h3",{id:"5-transform"},"5","."," Transform"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Transform")," \u7d44\u4ef6\u70ba\u8a13\u7df4\u548c\u670d\u52d9\u57f7\u884c\u7279\u5fb5\u5de5\u7a0b\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Transform")," \u4f7f\u7528",(0,r.kt)("a",{parentName:"p",href:"https://www.tensorflow.org/tfx/transform/get_started"},"TensorFlow Transform")," \u6a21\u7d44\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Transform")," \u8f38\u5165\u6578\u64da\u4f86\u81ea ",(0,r.kt)("inlineCode",{parentName:"p"},"ExampleGen")," \u3001 Schema \u4f86\u81ea ",(0,r.kt)("inlineCode",{parentName:"p"},"SchemaGen")," \uff0c\u4ee5\u53ca\u81ea\u884c\u5b9a\u7fa9\u5982\u4f55\u9032\u884c\u7279\u5fb5\u5de5\u7a0b\u7684\u6a21\u7d44\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u4ee5\u4e0b\u70ba\u81ea\u884c\u5b9a\u7fa9\u7684 Transform \u7a0b\u5f0f\u78bc\u7bc4\u4f8b\uff0c\uff08\u6709\u95dc TensorFlow Transform API \u7684\u4ecb\u7d39\uff0c",(0,r.kt)("a",{parentName:"p",href:"https://www.tensorflow.org/tfx/tutorials/transform/simple"},"\u8acb\u53c3\u95b1\u6559\u7a0b"),"\uff09\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Notebook \u9b54\u8853\u6307\u4ee4 ",(0,r.kt)("inlineCode",{parentName:"p"},"%%writefile")," \uff0c\u53ef\u4ee5\u5c07 cell \u5167\u7684\u7a0b\u5f0f\u78bc\u6307\u5b9a\u4fdd\u5b58\u70ba\u6a94\u6848\uff0c\u8a72\u6a94\u6848\u53ef\u4ee5\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"Transform")," \u7d44\u4ef6\u5c07\u7a0b\u5f0f\u78bc\u6a94\u6848\u505a\u70ba\u6a21\u7d44\u8f38\u5165\u57f7\u884c\u3002"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"%%writefile {_taxi_constants_module_file}\n\n# \u5047\u8a2d\u5206\u985e\u7279\u5fb5\u7684\u6700\u5927\u503c\nMAX_CATEGORICAL_FEATURE_VALUES = [24, 31, 12]\n\nCATEGORICAL_FEATURE_KEYS = [\n    'trip_start_hour', \n    'trip_start_day', \n    'trip_start_month',\n    'pickup_census_tract', \n    'dropoff_census_tract', \n    'pickup_community_area',\n    'dropoff_community_area'\n    ]\n\nDENSE_FLOAT_FEATURE_KEYS = ['trip_miles', 'fare', 'trip_seconds']\n\n# tf.transform\u7528\u65bc\u7de8\u78bc\u6bcf\u500b\u7279\u5fb5\u7684\u6876\u6578=10\nFEATURE_BUCKET_COUNT = 10\n\nBUCKET_FEATURE_KEYS = [\n    'pickup_latitude', \n    'pickup_longitude', \n    'dropoff_latitude',\n    'dropoff_longitude'\n    ]\n\n# tf.transform\u7528\u65bc\u7de8\u78bcVOCAB_FEATURES\u7684\u8a5e\u5f59\u8853\u8a9e\u6578\u91cf=1000\nVOCAB_SIZE = 1000\n\n# Count of out-of-vocab buckets in which unrecognized \n# VOCAB_FEATURES are hashed.\nOOV_SIZE = 10\n\nVOCAB_FEATURE_KEYS = [\n    'payment_type',\n    'company',\n]\n\n# Keys\nLABEL_KEY = 'tips'\nFARE_KEY = 'fare'\n\ndef transformed_name(key):\n  return key + '_xf'\n\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u63a5\u8457\u7de8\u5beb ",(0,r.kt)("inlineCode",{parentName:"p"},"preprocessing_fn")," \u5c07\u539f\u59cb\u6578\u64da\u8f49\u63db\u7279\u5fb5\u3002"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},'%%writefile {_taxi_transform_module_file}\n\nimport tensorflow as tf\nimport tensorflow_transform as tft\n\nimport taxi_constants\n\n_DENSE_FLOAT_FEATURE_KEYS = taxi_constants.DENSE_FLOAT_FEATURE_KEYS\n_VOCAB_FEATURE_KEYS = taxi_constants.VOCAB_FEATURE_KEYS\n_VOCAB_SIZE = taxi_constants.VOCAB_SIZE\n_OOV_SIZE = taxi_constants.OOV_SIZE\n_FEATURE_BUCKET_COUNT = taxi_constants.FEATURE_BUCKET_COUNT\n_BUCKET_FEATURE_KEYS = taxi_constants.BUCKET_FEATURE_KEYS\n_CATEGORICAL_FEATURE_KEYS = taxi_constants.CATEGORICAL_FEATURE_KEYS\n_FARE_KEY = taxi_constants.FARE_KEY\n_LABEL_KEY = taxi_constants.LABEL_KEY\n_transformed_name = taxi_constants.transformed_name\n\n\ndef preprocessing_fn(inputs):\n  """tf.transform\'s callback function for preprocessing inputs.\n  Args:\n    inputs: map from feature keys to raw not-yet-transformed \n    features.\n  Returns:\n    Map from string feature key to transformed feature \n    operations.\n  """\n  outputs = {}\n  for key in _DENSE_FLOAT_FEATURE_KEYS:\n    # Preserve this feature as a dense float, \n    # setting nan\'s to the mean.\n    outputs[_transformed_name(key)] = tft.scale_to_z_score(\n        _fill_in_missing(inputs[key]))\n\n  for key in _VOCAB_FEATURE_KEYS:\n    # Build a vocabulary for this feature.\n    outputs[_transformed_name(key)] = tft.compute_and_apply_vocabulary(\n        _fill_in_missing(inputs[key]),\n        top_k=_VOCAB_SIZE,\n        num_oov_buckets=_OOV_SIZE)\n\n  for key in _BUCKET_FEATURE_KEYS:\n    outputs[_transformed_name(key)] = tft.bucketize(\n        _fill_in_missing(inputs[key]), _FEATURE_BUCKET_COUNT)\n\n  for key in _CATEGORICAL_FEATURE_KEYS:\n    outputs[_transformed_name(key)] = _fill_in_missing(inputs[key])\n\n  # Was this passenger a big tipper?\n  taxi_fare = _fill_in_missing(inputs[_FARE_KEY])\n  tips = _fill_in_missing(inputs[_LABEL_KEY])\n  outputs[_transformed_name(_LABEL_KEY)] = tf.where(\n      tf.math.is_nan(taxi_fare),\n      tf.cast(\n          tf.zeros_like(taxi_fare), \n          tf.int64\n          ),\n      # Test if the tip was > 20% of the fare.\n      tf.cast(\n          tf.greater(\n          tips, \n          tf.multiply(taxi_fare, tf.constant(0.2))), \n          tf.int64\n          )\n      )\n\n  return outputs\n\n\ndef _fill_in_missing(x):\n  """Replace missing values in a SparseTensor.\n  Fills in missing values of `x` with \'\' or 0, \n  and converts to a dense tensor.\n\n  Args:\n    x: A `SparseTensor` of rank 2.  \n    Its dense shape should have size at most 1 in the second dimension.\n  Returns:\n    A rank 1 tensor where missing values of `x` have been filled in.\n  """\n  if not isinstance(x, tf.sparse.SparseTensor):\n    return x\n\n  default_value = \'\' if x.dtype == tf.string else 0\n  return tf.squeeze(\n      tf.sparse.to_dense(\n          tf.SparseTensor(x.indices, x.values, [x.dense_shape[0], 1]),\n          default_value),\n          axis=1\n          )\n\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u5c07\u7279\u5fb5\u5de5\u7a0b\u7a0b\u5f0f\u50b3\u905e\u7d66 ",(0,r.kt)("inlineCode",{parentName:"p"},"Transform")," \u7d44\u4ef6\u8f49\u63db\u8cc7\u6599\u3002"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"transform = tfx.components.Transform(\n    examples=example_gen.outputs['examples'],\n    schema=schema_gen.outputs['schema'],\n    module_file=os.path.abspath(_taxi_transform_module_file))\ncontext.run(transform)\n\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Transform")," \u7d44\u4ef6\u5c07\u7522\u751f\u4ee5\u4e0b\u5169\u7a2e\u985e\u578b\u7684\u8f38\u51fa\uff1a"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"transform_graph")," \u662f\u53ef\u4ee5\u57f7\u884c\u9810\u8655\u7406\u64cd\u4f5c\u7684\u5716\uff08\u6b64\u5716\u5c07\u5305\u542b\u5728\u670d\u52d9\u548c\u8a55\u4f30\u6a21\u578b\u4e2d\uff09\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"transformed_examples")," \u8868\u793a\u9810\u8655\u7406\u7684\u8a13\u7df4\u548c\u8a55\u4f30\u6578\u64da\u3002",(0,r.kt)("br",{parentName:"li"}),(0,r.kt)("img",{parentName:"li",src:"https://i.imgur.com/OvLbozG.png",alt:null})),(0,r.kt)("li",{parentName:"ul"},"\u67e5\u770b",(0,r.kt)("inlineCode",{parentName:"li"},"transform.outputs")," \u3002",(0,r.kt)("br",{parentName:"li"}),(0,r.kt)("img",{parentName:"li",src:"https://i.imgur.com/QbbspS8.png",alt:null})))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u8f38\u51fa\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"transform_graph")," \u540c\u6642\u6307\u5411\u5305\u542b3\u500b\u5b50\u76ee\u9304\u7684\u76ee\u9304\u3002"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"transformed_metadata"),"\u5b50\u76ee\u9304\u5305\u542b\u9810\u8655\u7406\u6578\u64da\u7684\u67b6\u69cb\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"transform_fn"),"\u5b50\u76ee\u9304\u5305\u542b\u5be6\u969b\u7684\u9810\u8655\u7406\u5716\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"metadata"),"\u5b50\u76ee\u9304\u5305\u542b\u539f\u59cb\u6578\u64da\u7684\u67b6\u69cb\u3002")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"train_uri = transform.outputs['transform_graph'].get()[0].uri\nos.listdir(train_uri)\n\n")))),(0,r.kt)("h3",{id:"6-trainer"},"6","."," Trainer"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Trainer"),"\u7d44\u4ef6\u8ca0\u8cac\u8a13\u7df4 TensorFlow \u6a21\u578b\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Trainer")," \u9810\u8a2d\u4f7f\u7528 Estimator API \uff0c\u5982\u8981\u4f7f\u7528 Keras API\uff0c\u60a8\u9700\u8981\u901a\u904e\u5728 Trainer \u7684\u69cb\u9020\u51fd\u6578\u4e2d\u8a2d\u7f6e\u4f86\u6307\u5b9a ",(0,r.kt)("inlineCode",{parentName:"p"},"custom_executor_spec=executor_spec.ExecutorClassSpec(GenericExecutor)")," \uff0c\u53c3\u95b1",(0,r.kt)("a",{parentName:"p",href:"https://github.com/tensorflow/community/blob/master/rfcs/20200117-tfx-generic-trainer.md"},"Generic Trainer")," \u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Trainer")," \u7684\u8f38\u5165\u4f86\u6e90:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u4f86\u81ea ",(0,r.kt)("inlineCode",{parentName:"li"},"SchemaGen")," \u7684 Schema\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u4f86\u81ea ",(0,r.kt)("inlineCode",{parentName:"li"},"Transform")," \u7684 graph\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u8a13\u7df4\u53c3\u6578\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u505a\u70ba\u6a21\u7d44\u8f38\u5165\u7684\u81ea\u5b9a\u7fa9\u7a0b\u5f0f\u78bc\u3002"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u4ee5\u4e0b\u70ba\u7528\u6236\u81ea\u5b9a\u7fa9\u6a21\u578b\u4ee3\u78bc\u793a\u7bc4\uff08",(0,r.kt)("a",{parentName:"p",href:"https://www.tensorflow.org/guide/keras"},"\u53c3\u898b TensorFlow Keras API \u4ecb\u7d39"),"\uff09\u3002"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},'%%writefile {_taxi_trainer_module_file}\n\nfrom typing import List, Text\n\nimport os\nimport absl\nimport datetime\nimport tensorflow as tf\nimport tensorflow_transform as tft\n\nfrom tfx import v1 as tfx\nfrom tfx_bsl.public import tfxio\n\nimport taxi_constants\n\n_DENSE_FLOAT_FEATURE_KEYS = taxi_constants.DENSE_FLOAT_FEATURE_KEYS\n_VOCAB_FEATURE_KEYS = taxi_constants.VOCAB_FEATURE_KEYS\n_VOCAB_SIZE = taxi_constants.VOCAB_SIZE\n_OOV_SIZE = taxi_constants.OOV_SIZE\n_FEATURE_BUCKET_COUNT = taxi_constants.FEATURE_BUCKET_COUNT\n_BUCKET_FEATURE_KEYS = taxi_constants.BUCKET_FEATURE_KEYS\n_CATEGORICAL_FEATURE_KEYS = taxi_constants.CATEGORICAL_FEATURE_KEYS\n_MAX_CATEGORICAL_FEATURE_VALUES = taxi_constants.MAX_CATEGORICAL_FEATURE_VALUES\n_LABEL_KEY = taxi_constants.LABEL_KEY\n_transformed_name = taxi_constants.transformed_name\n\n\ndef _transformed_names(keys):\n  return [_transformed_name(key) for key in keys]\n\n\ndef _get_serve_tf_examples_fn(model, tf_transform_output):\n  """Returns a function that parses a serialized tf.Example and applies TFT."""\n\n  model.tft_layer = tf_transform_output.transform_features_layer()\n\n  @tf.function\n  def serve_tf_examples_fn(serialized_tf_examples):\n    """Returns the output to be used in the serving signature."""\n    feature_spec = tf_transform_output.raw_feature_spec()\n    feature_spec.pop(_LABEL_KEY)\n    parsed_features = tf.io.parse_example(serialized_tf_examples, feature_spec)\n    transformed_features = model.tft_layer(parsed_features)\n    return model(transformed_features)\n\n  return serve_tf_examples_fn\n\n\ndef _input_fn(\n    file_pattern: List[Text],\n    data_accessor: tfx.components.DataAccessor,\n    tf_transform_output: tft.TFTransformOutput,\n    batch_size: int = 200) -> tf.data.Dataset:\n  """Generates features and label for tuning/training.\n\n  Args:\n    file_pattern: List of paths or patterns of input tfrecord files.\n    data_accessor: DataAccessor for converting input to RecordBatch.\n    tf_transform_output: A TFTransformOutput.\n    batch_size: representing the number of consecutive elements of returned\n      dataset to combine in a single batch\n\n  Returns:\n    A dataset that contains (features, indices) tuple where features is a\n      dictionary of Tensors, and indices is a single Tensor of label indices.\n  """\n  return data_accessor.tf_dataset_factory(\n      file_pattern,\n      tfxio.TensorFlowDatasetOptions(\n          batch_size=batch_size, label_key=_transformed_name(_LABEL_KEY)),\n      tf_transform_output.transformed_metadata.schema)\n\n\ndef _build_keras_model(hidden_units: List[int] = None) -> tf.keras.Model:\n  """Creates a DNN Keras model for classifying taxi data.\n  Args:\n    hidden_units: [int], the layer sizes of the DNN (input layer first).\n  Returns:\n    A keras Model.\n  """\n  real_valued_columns = [\n      tf.feature_column.numeric_column(key, shape=())\n      for key in _transformed_names(_DENSE_FLOAT_FEATURE_KEYS)\n  ]\n  categorical_columns = [\n      tf.feature_column.categorical_column_with_identity(\n          key, num_buckets=_VOCAB_SIZE + _OOV_SIZE, default_value=0)\n      for key in _transformed_names(_VOCAB_FEATURE_KEYS)\n  ]\n  categorical_columns += [\n      tf.feature_column.categorical_column_with_identity(\n          key, num_buckets=_FEATURE_BUCKET_COUNT, default_value=0)\n      for key in _transformed_names(_BUCKET_FEATURE_KEYS)\n  ]\n  categorical_columns += [\n      tf.feature_column.categorical_column_with_identity(  # pylint: disable=g-complex-comprehension\n          key,\n          num_buckets=num_buckets,\n          default_value=0) for key, num_buckets in zip(\n              _transformed_names(_CATEGORICAL_FEATURE_KEYS),\n              _MAX_CATEGORICAL_FEATURE_VALUES)\n  ]\n  indicator_column = [\n      tf.feature_column.indicator_column(categorical_column)\n      for categorical_column in categorical_columns\n  ]\n\n  model = _wide_and_deep_classifier(\n      # TODO(b/139668410) replace with premade wide_and_deep keras model\n      wide_columns=indicator_column,\n      deep_columns=real_valued_columns,\n      dnn_hidden_units=hidden_units or [100, 70, 50, 25])\n  return model\n\n\ndef _wide_and_deep_classifier(wide_columns, deep_columns, dnn_hidden_units):\n  """Build a simple keras wide and deep model.\n\n  Args:\n    wide_columns: Feature columns wrapped in indicator_column for wide (linear)\n      part of the model.\n    deep_columns: Feature columns for deep part of the model.\n    dnn_hidden_units: [int], the layer sizes of the hidden DNN.\n\n  Returns:\n    A Wide and Deep Keras model\n  """\n  # Following values are hard coded for simplicity in this example,\n  # However prefarably they should be passsed in as hparams.\n\n  # Keras needs the feature definitions at compile time.\n  # TODO(b/139081439): Automate generation of input layers from FeatureColumn.\n  input_layers = {\n      colname: tf.keras.layers.Input(\n          name=colname, \n          shape=(), \n          dtype=tf.float32\n          )\n      for colname in _transformed_names(_DENSE_FLOAT_FEATURE_KEYS)\n  }\n  input_layers.update({\n      colname: tf.keras.layers.Input(\n          name=colname, \n          shape=(), \n          dtype=\'int32\')\n      for colname in _transformed_names(_VOCAB_FEATURE_KEYS)\n  })\n  input_layers.update({\n      colname: tf.keras.layers.Input(\n          name=colname, \n          shape=(), \n          dtype=\'int32\')\n      for colname in _transformed_names(_BUCKET_FEATURE_KEYS)\n  })\n  input_layers.update({\n      colname: tf.keras.layers.Input(\n          name=colname, \n          shape=(), \n          dtype=\'int32\')\n      for colname in _transformed_names(_CATEGORICAL_FEATURE_KEYS)\n  })\n\n  # TODO(b/161952382): Replace with Keras preprocessing layers.\n  deep = tf.keras.layers.DenseFeatures(deep_columns)(input_layers)\n  for numnodes in dnn_hidden_units:\n    deep = tf.keras.layers.Dense(numnodes)(deep)\n  wide = tf.keras.layers.DenseFeatures(wide_columns)(input_layers)\n\n  output = tf.keras.layers.Dense(1)(\n          tf.keras.layers.concatenate([deep, wide]))\n\n  model = tf.keras.Model(input_layers, output)\n  model.compile(\n      loss=tf.keras.losses.BinaryCrossentropy(from_logits=True),\n      optimizer=tf.keras.optimizers.Adam(lr=0.001),\n      metrics=[tf.keras.metrics.BinaryAccuracy()])\n  model.summary(print_fn=absl.logging.info)\n  return model\n\n\n# TFX Trainer will call this function.\ndef run_fn(fn_args: tfx.components.FnArgs):\n  """Train the model based on given args.\n  Args:\n    fn_args: Holds args used to train the model as name/value pairs.\n  """\n  # Number of nodes in the first layer of the DNN\n  first_dnn_layer_size = 100\n  num_dnn_layers = 4\n  dnn_decay_factor = 0.7\n\n  tf_transform_output = tft.TFTransformOutput(fn_args.transform_output)\n\n  train_dataset = _input_fn(\n      fn_args.train_files, \n      fn_args.data_accessor, \n      tf_transform_output, \n      40\n      )\n  eval_dataset = _input_fn(\n      fn_args.eval_files, \n      fn_args.data_accessor, \n      tf_transform_output, \n      40\n      )\n\n  model = _build_keras_model(\n      # Construct layers sizes with exponetial decay\n      hidden_units=[\n          max(2, int(first_dnn_layer_size * dnn_decay_factor**i))\n          for i in range(num_dnn_layers)\n      ])\n\n  tensorboard_callback = tf.keras.callbacks.TensorBoard(\n      log_dir=fn_args.model_run_dir, update_freq=\'batch\')\n  model.fit(\n      train_dataset,\n      steps_per_epoch=fn_args.train_steps,\n      validation_data=eval_dataset,\n      validation_steps=fn_args.eval_steps,\n      callbacks=[tensorboard_callback])\n\n  signatures = {\n      \'serving_default\':\n          _get_serve_tf_examples_fn(\n              model,\n              tf_transform_output).get_concrete_function(\n                  tf.TensorSpec(\n                      shape=[None],\n                      dtype=tf.string,\n                      name=\'examples\'\n                      )\n                  ),\n                }\n  model.save(\n      fn_args.serving_model_dir, \n      save_format=\'tf\', \n      signatures=signatures\n      )\n\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u5275\u7acb ",(0,r.kt)("inlineCode",{parentName:"p"},"taxi_trainer.py")," \u4e4b\u5f8c\u5c07\u7a0b\u5f0f\u78bc\u505a\u70ba\u6a21\u7d44\u50b3\u905e\u7d66 ",(0,r.kt)("inlineCode",{parentName:"p"},"Trainer")," \u7d44\u4ef6\u4e26\u904b\u884c\u5b83\u4f86\u8a13\u7df4\u6a21\u578b\u3002"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"trainer = tfx.components.Trainer(\n    module_file=os.path.abspath(_taxi_trainer_module_file),\n    examples=transform.outputs['transformed_examples'],\n    transform_graph=transform.outputs['transform_graph'],\n    schema=schema_gen.outputs['schema'],\n    train_args=tfx.proto.TrainArgs(num_steps=10000),\n    eval_args=tfx.proto.EvalArgs(num_steps=5000))\ncontext.run(trainer)\n\n")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u4e92\u52d5\u5167\u6587\u5982\u4e0b:",(0,r.kt)("br",{parentName:"li"}),(0,r.kt)("img",{parentName:"li",src:"https://i.imgur.com/9J6kfJn.png",alt:null}))))),(0,r.kt)("h3",{id:"\u9078\u7528-\u4ee5-tensorboard-\u5206\u6790\u8a13\u7df4\u6a21\u578b"},"(\u9078\u7528) \u4ee5 TensorBoard \u5206\u6790\u8a13\u7df4\u6a21\u578b"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u53ef\u4ee5\u900f\u904e TensorBoard \u5206\u6790\u6a21\u578b\u8a13\u7df4\u66f2\u7dda\u3002"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"model_run_artifact_dir = trainer.outputs['model_run'].get()[0].uri\n\n%load_ext tensorboard\n%tensorboard --logdir {model_run_artifact_dir}\n\n")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u8996\u89ba\u5316\u7d50\u679c\u5982\u4e0b:",(0,r.kt)("br",{parentName:"li"}),(0,r.kt)("img",{parentName:"li",src:"https://i.imgur.com/v1wd1rq.png",alt:null}))))),(0,r.kt)("h3",{id:"7-evaluator"},"7","."," Evaluator"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Evaluator")," \u7d44\u4ef6\u53ef\u8a55\u4f30\u6a21\u578b\u6027\u80fd\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Evaluator")," \u7d44\u4ef6\u70ba ",(0,r.kt)("a",{parentName:"p",href:"https://www.tensorflow.org/tfx/model_analysis/get_started"},"TensorFlow Model Analysis (TFMA)")," \u6a21\u7d44\u529f\u80fd\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Evaluator")," \u53ef\u4ee5\u8a2d\u5b9a\u9580\u6abb\u503c\u4ee5\u6bd4\u8f03\u4e26\u9078\u64c7\u8f03\u4f73\u7684\u6a21\u578b\u3002\u9019\u5728\u751f\u7522\u7ba1\u9053\u8a2d\u7f6e\u4e2d\u5f88\u6709\u7528\uff0c\u60a8\u53ef\u4ee5\u6bcf\u5929\u81ea\u52d5\u8a13\u7df4\u548c\u9a57\u8b49\u6a21\u578b\u3002"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"model_resolver = tfx.dsl.Resolver(\n      strategy_class=tfx.dsl.experimental.LatestBlessedModelStrategy,\n      model=tfx.dsl.Channel(\n          type=tfx.types.standard_artifacts.Model),\n      model_blessing=tfx.dsl.Channel(\n          type=tfx.types.standard_artifacts.ModelBlessing)).with_id(\n              'latest_blessed_model_resolver')\ncontext.run(model_resolver)\n\nevaluator = tfx.components.Evaluator(\n    examples=example_gen.outputs['examples'],\n    model=trainer.outputs['model'],\n    baseline_model=model_resolver.outputs['model'],\n    eval_config=eval_config)\ncontext.run(evaluator)\n\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Evaluator")," \u7684\u8f38\u5165:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u8f38\u5165\u8cc7\u6599\u96c6\u4f86\u81ea ",(0,r.kt)("inlineCode",{parentName:"li"},"ExampleGen"),"\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u8a13\u7df4\u6a21\u578b\u4f86\u81ea ",(0,r.kt)("inlineCode",{parentName:"li"},"Trainer")," \u548c\u5207\u7247\u914d\u7f6e\u3002\u5207\u7247\u914d\u7f6e\u5141\u8a31\u60a8\u6839\u64da\u7279\u5fb5\u503c\u5c0d\u6307\u6a19\u9032\u884c\u5207\u7247\uff08\u4f8b\u5982\uff0c\u60a8\u7684\u6a21\u578b\u5728\u65e9\u4e0a 8 \u9ede\u548c\u665a\u4e0a 8 \u9ede\u958b\u59cb\u7684\u51fa\u79df\u8eca\u884c\u7a0b\u4e2d\u8868\u73fe\u5982\u4f55\uff1f\uff09\u3002",(0,r.kt)("br",{parentName:"li"}),(0,r.kt)("img",{parentName:"li",src:"https://i.imgur.com/t5OvYf4.png",alt:null})))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u5728\u6b64\u7b46\u8a18\u672c\u7bc4\u4f8b\u53ea\u8a13\u7df4\u4e00\u500b\u6a21\u578b\uff0c\u6240\u4ee5",(0,r.kt)("inlineCode",{parentName:"p"},"Evaluator"),"\u81ea\u52d5\u5c07\u6a21\u578b\u6a19\u8a18\u70ba\u201cGood\u201d\u3002"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"context.show(evaluator.outputs['evaluation'])\n\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u8981\u5207\u7247\u986f\u793a\u6a21\u578b\u60c5\u5f62\uff0c\u9700\u4f7f\u7528 TFMA \u6a21\u7d44\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u5728\u6b64\u793a\u7bc4\u5c07",(0,r.kt)("inlineCode",{parentName:"p"},"trip_start_hour"),"\u5207\u7247\u8996\u89ba\u5316\uff0cTFMA \u652f\u63f4\u8a31\u591a\u5176\u4ed6\u53ef\u8996\u5316\uff0c\u4f8b\u5982\u516c\u5e73\u6307\u6a19\u548c\u7e6a\u88fd\u6a21\u578b\u6027\u80fd\u7684\u6642\u9593\u5e8f\u5217\u3002\u8981\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8acb\u53c3\u95b1",(0,r.kt)("a",{parentName:"p",href:"https://www.tensorflow.org/tfx/tutorials/model_analysis/tfma_basic"},"\u6559\u5b78"),"\u3002"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import tensorflow_model_analysis as tfma\n\n# Get the TFMA output result path and load the result.\nPATH_TO_RESULT = evaluator.outputs['evaluation'].get()[0].uri\ntfma_result = tfma.load_eval_result(PATH_TO_RESULT)\n\n# Show data sliced along feature column trip_start_hour.\ntfma.view.render_slicing_metrics(\n    tfma_result, slicing_column='trip_start_hour')\n\n")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5207\u7247\u793a\u7bc4\u5982\u4e0b:",(0,r.kt)("br",{parentName:"li"}),(0,r.kt)("img",{parentName:"li",src:"https://i.imgur.com/FkBXcE1.png",alt:null})))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u901a\u904e\u9580\u6abb\u503c\u7684\u6a21\u578b\u6703\u5f97\u5230\u795d\u798f ",(0,r.kt)("inlineCode",{parentName:"p"},"blessing")," \uff0c\u7b2c\u4e00\u6b21\u9810\u8a2d\u6703\u81ea\u52d5\u53d6\u5f97\uff0c\u4e4b\u5f8c\u6301\u7e8c\u8a13\u7df4\u904e\u7a0b\u6703\u5c07\u53d6\u5f97\u795d\u798f\u7684\u6a21\u578b\u518d\u4e0a\u7dda\u3002"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"blessing_uri = evaluator.outputs['blessing'].get()[0].uri\n!ls -l {blessing_uri}\n\n")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{parentName:"p",src:"https://i.imgur.com/ipnkuaN.png",alt:null})))),(0,r.kt)("h3",{id:"8-pusher"},"8","."," Pusher"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Pusher")," \u7d44\u4ef6\u901a\u5e38\u4f4d\u65bc TFX \u7ba1\u9053\u672b\u7aef\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Pusher")," \u7d44\u4ef6\u6aa2\u67e5\u6a21\u578b\u662f\u5426\u5df2\u901a\u904e\u9a57\u8b49\uff0c\u5982\u679c\u662f\uff0c\u5247\u5c07\u6a21\u578b\u5c0e\u51fa\u81f3 ",(0,r.kt)("inlineCode",{parentName:"p"},"_serving_model_dir"),"\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Pusher")," \u5c07\u4ee5 ",(0,r.kt)("inlineCode",{parentName:"p"},"SavedModel")," \u683c\u5f0f\u5c0e\u51fa\u60a8\u7684\u6a21\u578b\u3002"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"pusher = tfx.components.Pusher(\n    model=trainer.outputs['model'],\n    model_blessing=evaluator.outputs['blessing'],\n    push_destination=tfx.proto.PushDestination(\n        filesystem=tfx.proto.PushDestination.Filesystem(\n            base_directory=_serving_model_dir)))\ncontext.run(pusher)\n\n")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{parentName:"p",src:"https://i.imgur.com/F3DC561.png",alt:null}))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u7d42\u65bc\u5b8c\u6210 TFX \u6240\u6709\u7d44\u4ef6\u7684\u793a\u7bc4!")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u5982\u679c\u5728 GCP \u5728 AI Platform \u4ee5 Kubeflow \u90e8\u7f72 TFX\uff0cPipeline \u9032\u4e00\u6b65\u5be6\u4f5c\u53ef\u53c3\u95b1 ",(0,r.kt)("a",{parentName:"p",href:"https://www.qwiklabs.com/focuses/18244?locale=zh_TW&parent=catalog"},"TFX on Google Cloud AI Platform Pipelines")," \u8996\u89ba\u5316\u5982\u4e0b\u65b9\u4fbf\u67e5\u95b1\u3002",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://i.imgur.com/6P4RCS5.png",alt:null})))),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://ithelp.ithome.com.tw/images/emoticon/emoticon34.gif",alt:"/images/emoticon/emoticon34.gif"})),(0,r.kt)("h2",{id:"\u5c0f\u7d50"},"\u5c0f\u7d50"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5728\u7b46\u8a18\u672c\u9010\u6b65\u4e92\u52d5\u5f0f\u7684\u5b8c\u6210 TFX \u5404\u7d44\u4ef6\u7684\u4f5c\u696d\u6d41\u7a0b\uff0c\u5be6\u969b\u4e0a\u5de5\u4f5c\u53ef\u4ee5\u4e0d\u7528\u90a3\u9ebc\u8907\u96dc\uff0c\u5728 GCP \u7684\u89e3\u6c7a\u65b9\u6848\uff0c\u53ef\u4ee5\u7528 Google Cloud AI Platform Pipeline \uff0c\u662f Google Cloud AI Platform + TFX \u5bb9\u5668\u5316\u90e8\u7f72\u7684\u7d50\u5408\uff0c\u60a8\u53ef\u4ee5\u53c3\u95b1",(0,r.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=I3MjuFGmJrg"},"TFX: Production ML with TensorFlow in 2020 (TF Dev Summit '20)")," \u5f71\u7247\u8aaa\u660e\uff0c\u7406\u89e3 TFX \u5404\u7d44\u4ef6\u4e32\u8d77\u7684\u7528\u65bc\u751f\u7522\u7684\u6a5f\u68b0\u5b78\u7fd2\u5de5\u4f5c\u6d41\u7a0b\u3002")),(0,r.kt)("h2",{id:"\u53c3\u8003"},"\u53c3\u8003"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.tensorflow.org/tfx/tutorials/tfx/components_keras"},"TFX Keras Component Tutorial"),"\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.qwiklabs.com/focuses/18244?locale=zh_TW&parent=catalog"},"TFX on Google Cloud AI Platform Pipelines")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=I3MjuFGmJrg"},"TFX: Production ML with TensorFlow in 2020 (TF Dev Summit '20)"))))}_.isMDXComponent=!0}}]);